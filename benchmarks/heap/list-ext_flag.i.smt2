(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (h Int) (flag Int) (n Addr))
  )
))
(declare-fun inv_main14 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main15 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main20 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main21 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main23 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main24 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main27 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main3 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main30 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main33 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main37 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main38 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main40 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main41 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main42 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main59 (Heap Addr Addr Addr Int Int) Bool)
(declare-fun inv_main6 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main63 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main67 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main72 (Heap Addr Addr Addr Int) Bool)
(declare-fun inv_main9 (Heap Addr Addr Addr Int) Bool)
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (= var3 emptyHeap)) (inv_main3 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (inv_main30 var5 var4 var3 var2 var1 var0)) (inv_main30 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 node) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Int) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Heap)) (or (not (and (inv_main23 var17 var16 var15 var14 var13) (and (and (and (and (= var12 nullAddr) (and (and (and (and (and (= var11 (newHeap (alloc var10 (O_node var9)))) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var12 (newAddr (alloc var10 (O_node var9)))))) (and (is-O_node (read var17 var16)) (is-O_node (read var17 var16)))) (and (and (and (and (= var10 (write var17 var16 (O_node (node 1 (flag (getnode (read var17 var16))) (n (getnode (read var17 var16))))))) (= var7 var16)) (= var5 var15)) (= var3 var14)) (= var1 var13))) (= var0 1)))) (inv_main30 var11 var8 var6 var12 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 node) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Int) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Heap)) (or (not (and (inv_main24 var17 var16 var15 var14 var13) (and (and (and (and (= var12 nullAddr) (and (and (and (and (and (= var11 (newHeap (alloc var10 (O_node var9)))) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var12 (newAddr (alloc var10 (O_node var9)))))) (and (is-O_node (read var17 var16)) (is-O_node (read var17 var16)))) (and (and (and (and (= var10 (write var17 var16 (O_node (node 2 (flag (getnode (read var17 var16))) (n (getnode (read var17 var16))))))) (= var7 var16)) (= var5 var15)) (= var3 var14)) (= var1 var13))) (= var0 1)))) (inv_main30 var11 var8 var6 var12 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main63 var10 var9 var8 var7 var6) (and (and (not (= var5 nullAddr)) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (n (getnode (read var10 var9)))))))) (inv_main67 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main15 var9 var8 var7 var6 var5) (and (and (is-O_node (read var9 var8)) (is-O_node (read var9 var8))) (and (and (and (and (= var4 (write var9 var8 (O_node (node 3 (flag (getnode (read var9 var8))) (n (getnode (read var9 var8))))))) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 var5))))) (inv_main36 var4 var2 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap)) (or (not (and (inv_main40 var11 var10 var9 var8 var7) (and (and (is-O_node (read var11 var10)) (and (and (and (and (and (= var6 var11) (= var5 var10)) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 (n (getnode (read var11 var10)))))) (= var0 (+ var2 1))))) (inv_main36 var6 var1 var4 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Heap)) (or (not (and (inv_main23 var16 var15 var14 var13 var12) (and (and (and (not (= var11 nullAddr)) (and (and (and (and (and (= var10 (newHeap (alloc var9 (O_node var8)))) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 var0)) (= var11 (newAddr (alloc var9 (O_node var8)))))) (and (is-O_node (read var16 var15)) (is-O_node (read var16 var15)))) (and (and (and (and (= var9 (write var16 var15 (O_node (node 1 (flag (getnode (read var16 var15))) (n (getnode (read var16 var15))))))) (= var6 var15)) (= var4 var14)) (= var2 var13)) (= var0 var12))))) (inv_main27 var10 var7 var5 var11 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 node) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Int) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Heap)) (or (not (and (inv_main24 var16 var15 var14 var13 var12) (and (and (and (not (= var11 nullAddr)) (and (and (and (and (and (= var10 (newHeap (alloc var9 (O_node var8)))) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 var0)) (= var11 (newAddr (alloc var9 (O_node var8)))))) (and (is-O_node (read var16 var15)) (is-O_node (read var16 var15)))) (and (and (and (and (= var9 (write var16 var15 (O_node (node 2 (flag (getnode (read var16 var15))) (n (getnode (read var16 var15))))))) (= var6 var15)) (= var4 var14)) (= var2 var13)) (= var0 var12))))) (inv_main27 var10 var7 var5 var11 var1))))
(assert (forall ((var0 Heap) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (inv_main27 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var4)) (is-O_node (read var5 var4))) (= var0 (write var5 var4 (O_node (node (h (getnode (read var5 var4))) (flag (getnode (read var5 var4))) var2))))))) (inv_main33 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main36 var10 var9 var8 var7 var6) (and (and (= var5 3) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main37 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main41 var10 var9 var8 var7 var6) (and (and (not (= var5 1)) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main72 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main42 var10 var9 var8 var7 var6) (and (and (not (= var5 2)) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main72 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main37 var10 var9 var8 var7 var6) (and (and (or (not (= var5 3)) (<= 0 (+ (+ var4 (- 20)) (- 1)))) (is-O_node (read var10 var9))) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var4 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main72 var3 var2 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (inv_main9 var4 var3 var2 var1 var0)) (inv_main9 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 node) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main3 var10 var9 var8 var7) (and (and (= var6 nullAddr) (and (and (and (and (= var5 (newHeap (alloc var10 (O_node var4)))) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var6 (newAddr (alloc var10 (O_node var4)))))) (= var0 1)))) (inv_main9 var5 var3 var6 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main20 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (= (flag (getnode (read var4 var3))) 0))))) (inv_main23 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main38 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (= (flag (getnode (read var4 var3))) 0)))) (inv_main42 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main38 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (= (flag (getnode (read var4 var3))) 0))))) (inv_main41 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (inv_main59 var5 var4 var3 var2 var1 var0)) (inv_main59 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap)) (or (not (and (inv_main37 var11 var10 var9 var8 var7) (and (and (= var6 nullAddr) (and (and (and (= var5 3) (not (<= 0 (+ (+ var4 (- 20)) (- 1))))) (is-O_node (read var11 var10))) (and (and (and (and (and (= var3 var11) (= var2 var10)) (= var6 var9)) (= var1 var8)) (= var4 var7)) (= var5 (h (getnode (read var11 var10))))))) (= var0 1)))) (inv_main59 var3 var6 var6 var1 var4 var0))))
(assert (forall ((var0 Int) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main21 var6 var5 var4 var3 var2) (and (and (is-O_node (read var6 var5)) (is-O_node (read var6 var5))) (= var1 (write var6 var5 (O_node (node (h (getnode (read var6 var5))) var0 (n (getnode (read var6 var5)))))))))) (inv_main20 var1 var5 var4 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main37 var10 var9 var8 var7 var6) (and (not (= var5 nullAddr)) (and (and (and (= var4 3) (not (<= 0 (+ (+ var3 (- 20)) (- 1))))) (is-O_node (read var10 var9))) (and (and (and (and (and (= var2 var10) (= var1 var9)) (= var5 var8)) (= var0 var7)) (= var3 var6)) (= var4 (h (getnode (read var10 var9))))))))) (inv_main58 var2 var5 var5 var0 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main14 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 20 (* (- 1) var0)) (- 1)))))) (inv_main15 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (inv_main14 var5 var4 var3 var2 var1) (and (= var0 0) (<= 0 (+ (+ 20 (* (- 1) var1)) (- 1)))))) (inv_main15 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (inv_main14 var6 var5 var4 var3 var2) (and (and (not (= var1 0)) (<= 0 (+ (+ 20 (* (- 1) var2)) (- 1)))) (= var0 (+ var2 1))))) (inv_main21 var6 var5 var4 var3 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main33 var10 var9 var8 var7 var6) (and (is-O_node (read var10 var9)) (and (and (and (and (and (= var5 var10) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 (n (getnode (read var10 var9)))))))) (inv_main14 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (inv_main6 var8 var7 var6 var5) (and (and (and (is-O_node (read var8 var6)) (is-O_node (read var8 var6))) (and (and (and (= var4 (write var8 var6 (O_node (node (h (getnode (read var8 var6))) (flag (getnode (read var8 var6))) 0)))) (= var3 var7)) (= var2 var6)) (= var1 var5))) (= var0 0)))) (inv_main14 var4 var2 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main58 var10 var9 var8 var7 var6) (and (and (not (= var5 nullAddr)) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (n (getnode (read var10 var9)))))))) (inv_main63 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Heap)) (or (not (and (inv_main67 var15 var14 var13 var12 var11) (and (and (is-O_node (read var15 var14)) (and (and (and (and (and (= var10 var15) (= var9 var14)) (= var8 var13)) (= var7 var12)) (= var6 var11)) (= var5 (n (getnode (read var15 var14)))))) (and (and (and (and (= var4 (write var10 var9 defObj)) (= var3 var9)) (= var2 var8)) (= var1 var5)) (= var0 var6))))) (inv_main63 var4 var1 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main36 var10 var9 var8 var7 var6) (and (and (not (= var5 3)) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main38 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (inv_main3 var9 var8 var7 var6) (and (not (= var5 nullAddr)) (and (and (and (and (= var4 (newHeap (alloc var9 (O_node var3)))) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (newAddr (alloc var9 (O_node var3)))))))) (inv_main6 var4 var2 var5 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main20 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (= (flag (getnode (read var4 var3))) 0)))) (inv_main24 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main41 var10 var9 var8 var7 var6) (and (and (= var5 1) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main40 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Int) (var6 Int) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (inv_main42 var10 var9 var8 var7 var6) (and (and (= var5 2) (is-O_node (read var10 var9))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var9)))))))) (inv_main40 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main6 var3 var2 var1 var0) (not (is-O_node (read var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main6 var3 var2 var1 var0) (and (is-O_node (read var3 var1)) (not (is-O_node (read var3 var1))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main21 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main21 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (is-O_node (read var4 var3))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main23 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main23 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (is-O_node (read var4 var3))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (is-O_node (read var4 var3))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main27 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main27 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (is-O_node (read var4 var3))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main33 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main15 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main15 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var3)) (not (is-O_node (read var4 var3))))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main36 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main38 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main41 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main42 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main40 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main37 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main58 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main63 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (inv_main67 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var3)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (inv_main72 var4 var3 var2 var1 var0))))
(check-sat)
