(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main10 (Heap Int AddrRange AddrRange) Bool)
(declare-fun inv_main11 (Heap Int AddrRange AddrRange) Bool)
(declare-fun inv_main12 (Heap Int AddrRange AddrRange) Bool)
(declare-fun inv_main16 (Heap Int AddrRange AddrRange) Bool)
(declare-fun inv_main18 (Heap Int AddrRange AddrRange) Bool)
(declare-fun inv_main5 (Heap Int AddrRange AddrRange) Bool)
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Heap)) (or (not (and (and (and (= var8 emptyHeap) (and (and (= var7 (newBatchHeap (batchAlloc emptyHeap (O_Int var6) 100000))) (= var5 var4)) (= var3 (newAddrRange (batchAlloc emptyHeap (O_Int var6) 100000))))) (= var2 (newBatchHeap (batchAlloc emptyHeap (O_Int var1) 100000)))) (= var0 (newAddrRange (batchAlloc emptyHeap (O_Int var1) 100000))))) (inv_main5 var2 var5 var3 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (or (not (and (inv_main16 var8 var7 var6 var5) (and (and (= var4 10) (is-O_Int (read var8 (nthAddrRange var6 var7)))) (and (and (and (and (= var3 var8) (= var2 var7)) (= var1 var6)) (= var0 var5)) (= var4 (getInt (read var8 (nthAddrRange var6 var7)))))))) (inv_main18 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Heap)) (or (not (and (inv_main5 var4 var3 var2 var1) (= var0 0))) (inv_main11 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (or (not (and (inv_main12 var8 var7 var6 var5) (and (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var4 2))) (- 1))) (and (is-O_Int (read var8 (nthAddrRange var5 var7))) (is-O_Int (read var8 (nthAddrRange var5 var7))))) (and (and (and (= var3 (write var8 (nthAddrRange var5 var7) (O_Int 20))) (= var4 var7)) (= var2 var6)) (= var1 var5))) (= var0 (+ var4 2))))) (inv_main11 var3 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Heap)) (or (not (and (inv_main10 var9 var8 var7 var6) (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var5 2))) (- 1))) (and (and (not (= var4 10)) (is-O_Int (read var9 (nthAddrRange var7 var8)))) (and (and (and (and (= var3 var9) (= var5 var8)) (= var2 var7)) (= var1 var6)) (= var4 (getInt (read var9 (nthAddrRange var7 var8))))))) (= var0 (+ var5 2))))) (inv_main11 var3 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (or (not (and (inv_main12 var8 var7 var6 var5) (and (and (and (not (<= 0 (+ (+ 100000 (* (- 1) (+ var4 2))) (- 1)))) (and (is-O_Int (read var8 (nthAddrRange var5 var7))) (is-O_Int (read var8 (nthAddrRange var5 var7))))) (and (and (and (= var3 (write var8 (nthAddrRange var5 var7) (O_Int 20))) (= var4 var7)) (= var2 var6)) (= var1 var5))) (= var0 0)))) (inv_main16 var3 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Heap)) (or (not (and (inv_main10 var9 var8 var7 var6) (and (and (not (<= 0 (+ (+ 100000 (* (- 1) (+ var5 2))) (- 1)))) (and (and (not (= var4 10)) (is-O_Int (read var9 (nthAddrRange var7 var8)))) (and (and (and (and (= var3 var9) (= var5 var8)) (= var2 var7)) (= var1 var6)) (= var4 (getInt (read var9 (nthAddrRange var7 var8))))))) (= var0 0)))) (inv_main16 var3 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Heap)) (or (not (and (inv_main18 var4 var3 var2 var1) (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var3 2))) (- 1))) (is-O_Int (read var4 (nthAddrRange var1 var3)))) (= var0 (+ var3 2))))) (inv_main16 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var8 var7 var6) (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var5 2))) (- 1))) (and (and (not (= var4 10)) (is-O_Int (read var9 (nthAddrRange var7 var8)))) (and (and (and (and (= var3 var9) (= var5 var8)) (= var2 var7)) (= var1 var6)) (= var4 (getInt (read var9 (nthAddrRange var7 var8))))))) (= var0 (+ var5 2))))) (inv_main16 var3 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Heap) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (or (not (and (inv_main11 var5 var4 var3 var2) (and (and (is-O_Int (read var5 (nthAddrRange var3 var4))) (is-O_Int (read var5 (nthAddrRange var3 var4)))) (= var1 (write var5 (nthAddrRange var3 var4) (O_Int var0)))))) (inv_main10 var1 var4 var3 var2))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (or (not (and (inv_main10 var8 var7 var6 var5) (and (and (= var4 10) (is-O_Int (read var8 (nthAddrRange var6 var7)))) (and (and (and (and (= var3 var8) (= var2 var7)) (= var1 var6)) (= var0 var5)) (= var4 (getInt (read var8 (nthAddrRange var6 var7)))))))) (inv_main12 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var1 var2))) (not (is-O_Int (read var3 (nthAddrRange var1 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main12 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main12 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main12 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (is-O_Int (read var3 (nthAddrRange var0 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main16 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main16 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (= (getInt (read var3 (nthAddrRange var0 var2))) 20)))))))
(check-sat)
