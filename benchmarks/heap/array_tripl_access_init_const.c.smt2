(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main10 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main11 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main14 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main5 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main8 (Heap Int Int AddrRange) Bool)
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Heap)) (or (not (and (and (and (= var5 emptyHeap) (= var4 (newBatchHeap (batchAlloc emptyHeap (O_Int var3) 300001)))) (= var2 100000)) (= var1 (newAddrRange (batchAlloc emptyHeap (O_Int var3) 300001))))) (inv_main5 var4 var0 var2 var1))))
(assert (forall ((var0 Heap) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main8 var4 var3 var2 var1) (and (and (is-O_Int (read var4 (nthAddrRange var1 (* 3 var3)))) (is-O_Int (read var4 (nthAddrRange var1 (* 3 var3))))) (= var0 (write var4 (nthAddrRange var1 (* 3 var3)) (O_Int 0)))))) (inv_main10 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main5 var4 var3 var2 var1) (and (<= 0 var2) (= var0 0)))) (inv_main8 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main11 var8 var7 var6 var5) (and (and (<= 0 (+ var4 (* (- 1) (+ var3 1)))) (and (and (is-O_Int (read var8 (nthAddrRange var5 (+ (* 3 var7) 2)))) (is-O_Int (read var8 (nthAddrRange var5 (+ (* 3 var7) 2))))) (and (and (and (= var2 (write var8 (nthAddrRange var5 (+ (* 3 var7) 2)) (O_Int 0))) (= var3 var7)) (= var4 var6)) (= var1 var5)))) (= var0 (+ var3 1))))) (inv_main8 var2 var0 var4 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main14 var4 var3 var2 var1) (and (and (<= 0 (+ (* 3 var2) (* (- 1) (+ var3 1)))) (is-O_Int (read var4 (nthAddrRange var1 var3)))) (= var0 (+ var3 1))))) (inv_main14 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main5 var4 var3 var2 var1) (and (and (<= 0 (* 3 var2)) (not (<= 0 var2))) (= var0 0)))) (inv_main14 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main11 var8 var7 var6 var5) (and (and (<= 0 (* 3 var4)) (and (not (<= 0 (+ var4 (* (- 1) (+ var3 1))))) (and (and (is-O_Int (read var8 (nthAddrRange var5 (+ (* 3 var7) 2)))) (is-O_Int (read var8 (nthAddrRange var5 (+ (* 3 var7) 2))))) (and (and (and (= var2 (write var8 (nthAddrRange var5 (+ (* 3 var7) 2)) (O_Int 0))) (= var3 var7)) (= var4 var6)) (= var1 var5))))) (= var0 0)))) (inv_main14 var2 var0 var4 var1))))
(assert (forall ((var0 Heap) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main10 var4 var3 var2 var1) (and (and (is-O_Int (read var4 (nthAddrRange var1 (+ (* 3 var3) 1)))) (is-O_Int (read var4 (nthAddrRange var1 (+ (* 3 var3) 1))))) (= var0 (write var4 (nthAddrRange var1 (+ (* 3 var3) 1)) (O_Int 0)))))) (inv_main11 var0 var3 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))) (not (within var0 (nthAddrRange var0 (* 3 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))) (not (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (<= 0 (getInt (read var3 (nthAddrRange var0 var2))))))))))
(check-sat)
