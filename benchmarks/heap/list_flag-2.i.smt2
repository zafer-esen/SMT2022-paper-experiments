(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (node 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (O_node (getnode node))
   (defObj)
  )
  (
   (node (h Int) (n Addr))
  )
))
(declare-fun inv_main11 (Heap Int Addr Addr Addr Int) Bool)
(declare-fun inv_main15 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main16 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main20 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main21 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main26 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Int Addr Addr Addr Int) Bool)
(declare-fun inv_main33 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main38 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main39 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main40 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main41 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main44 (Heap Int Addr Addr Addr) Bool)
(declare-fun inv_main48 (Heap Int Addr Addr Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main15 var5 var4 var3 var2 var1) (and (= var4 0) (not (= var0 0))))) (inv_main21 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (inv_main11 var5 var4 var3 var2 var1 var0)) (inv_main11 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 node) (var10 Heap) (var11 Addr) (var12 Heap)) (or (not (and (inv_main2 var12) (and (and (= var11 nullAddr) (and (and (and (and (and (= var10 (newHeap (alloc var12 (O_node var9)))) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var11 (newAddr (alloc var12 (O_node var9)))))) (= var0 1)))) (inv_main11 var10 var8 var6 var11 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main38 var10 var9 var8 var7 var6) (and (and (not (= var5 3)) (is-O_node (read var10 var8))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var8)))))))) (inv_main48 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main41 var10 var9 var8 var7 var6) (and (is-O_node (read var10 var8)) (and (and (and (and (and (= var5 var10) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 (n (getnode (read var10 var8)))))))) (inv_main39 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var8 var7 var6 var5) (and (not (= var4 0)) (and (and (is-O_node (read var9 var7)) (is-O_node (read var9 var7))) (and (and (and (and (= var3 (write var9 var7 (O_node (node 3 (n (getnode (read var9 var7))))))) (= var4 var8)) (= var2 var7)) (= var1 var6)) (= var0 var5)))))) (inv_main39 var3 var4 var1 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (inv_main29 var5 var4 var3 var2 var1 var0)) (inv_main29 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 node) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Heap)) (or (not (and (inv_main20 var17 var16 var15 var14 var13) (and (and (and (= var12 nullAddr) (and (and (and (and (and (= var11 (newHeap (alloc var10 (O_node var9)))) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var12 (newAddr (alloc var10 (O_node var9)))))) (and (and (is-O_node (read var17 var15)) (is-O_node (read var17 var15))) (and (and (and (and (= var10 (write var17 var15 (O_node (node 1 (n (getnode (read var17 var15))))))) (= var7 var16)) (= var5 var15)) (= var3 var14)) (= var1 var13)))) (= var0 1)))) (inv_main29 var11 var8 var6 var4 var12 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 node) (var10 Heap) (var11 Heap) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Heap)) (or (not (and (inv_main21 var17 var16 var15 var14 var13) (and (and (and (= var12 nullAddr) (and (and (and (and (and (= var11 (newHeap (alloc var10 (O_node var9)))) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var12 (newAddr (alloc var10 (O_node var9)))))) (and (and (is-O_node (read var17 var15)) (is-O_node (read var17 var15))) (and (and (and (and (= var10 (write var17 var15 (O_node (node 2 (n (getnode (read var17 var15))))))) (= var7 var16)) (= var5 var15)) (= var3 var14)) (= var1 var13)))) (= var0 1)))) (inv_main29 var11 var8 var6 var4 var12 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main39 var10 var9 var8 var7 var6) (and (and (= var5 1) (is-O_node (read var10 var8))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var8)))))))) (inv_main41 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 node) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Heap)) (or (not (and (inv_main20 var16 var15 var14 var13 var12) (and (and (not (= var11 nullAddr)) (and (and (and (and (and (= var10 (newHeap (alloc var9 (O_node var8)))) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 var0)) (= var11 (newAddr (alloc var9 (O_node var8)))))) (and (and (is-O_node (read var16 var14)) (is-O_node (read var16 var14))) (and (and (and (and (= var9 (write var16 var14 (O_node (node 1 (n (getnode (read var16 var14))))))) (= var6 var15)) (= var4 var14)) (= var2 var13)) (= var0 var12)))))) (inv_main26 var10 var7 var5 var3 var11))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 node) (var9 Heap) (var10 Heap) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Heap)) (or (not (and (inv_main21 var16 var15 var14 var13 var12) (and (and (not (= var11 nullAddr)) (and (and (and (and (and (= var10 (newHeap (alloc var9 (O_node var8)))) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 var0)) (= var11 (newAddr (alloc var9 (O_node var8)))))) (and (and (is-O_node (read var16 var14)) (is-O_node (read var16 var14))) (and (and (and (and (= var9 (write var16 var14 (O_node (node 2 (n (getnode (read var16 var14))))))) (= var6 var15)) (= var4 var14)) (= var2 var13)) (= var0 var12)))))) (inv_main26 var10 var7 var5 var3 var11))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main39 var10 var9 var8 var7 var6) (and (and (not (= var5 1)) (is-O_node (read var10 var8))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var8)))))))) (inv_main38 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main40 var10 var9 var8 var7 var6) (and (and (not (= var5 2)) (is-O_node (read var10 var8))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var8)))))))) (inv_main38 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main44 var10 var9 var8 var7 var6) (and (is-O_node (read var10 var8)) (and (and (and (and (and (= var5 var10) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 (n (getnode (read var10 var8)))))))) (inv_main40 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var8 var7 var6 var5) (and (= var4 0) (and (and (is-O_node (read var9 var7)) (is-O_node (read var9 var7))) (and (and (and (and (= var3 (write var9 var7 (O_node (node 3 (n (getnode (read var9 var7))))))) (= var4 var8)) (= var2 var7)) (= var1 var6)) (= var0 var5)))))) (inv_main40 var3 var4 var1 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap) (var5 Int) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main40 var10 var9 var8 var7 var6) (and (and (= var5 2) (is-O_node (read var10 var8))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (= var5 (h (getnode (read var10 var8)))))))) (inv_main44 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main15 var5 var4 var3 var2 var1) (and (not (= var4 0)) (not (= var0 0))))) (inv_main20 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Heap) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main26 var5 var4 var3 var2 var1) (and (and (is-O_node (read var5 var3)) (is-O_node (read var5 var3))) (= var0 (write var5 var3 (O_node (node (h (getnode (read var5 var3))) var1))))))) (inv_main33 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (inv_main33 var10 var9 var8 var7 var6) (and (is-O_node (read var10 var8)) (and (and (and (and (and (= var5 var10) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var6)) (= var0 (n (getnode (read var10 var8)))))))) (inv_main15 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Int) (var8 node) (var9 Heap) (var10 Addr) (var11 Heap)) (or (not (and (inv_main2 var11) (and (not (= var10 nullAddr)) (and (and (and (and (and (= var9 (newHeap (alloc var11 (O_node var8)))) (= var7 var6)) (= var5 var4)) (= var3 var2)) (= var1 var0)) (= var10 (newAddr (alloc var11 (O_node var8)))))))) (inv_main15 var9 var7 var10 var10 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main15 var5 var4 var3 var2 var1) (= var0 0))) (inv_main16 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var2)) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main21 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main21 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var2)) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main26 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main26 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var2)) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main33 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main16 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main16 var4 var3 var2 var1 var0) (and (is-O_node (read var4 var2)) (not (is-O_node (read var4 var2))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main39 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main41 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main40 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main44 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (and (inv_main38 var4 var3 var2 var1 var0) (not (is-O_node (read var4 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Heap)) (not (inv_main48 var4 var3 var2 var1 var0))))
(check-sat)
