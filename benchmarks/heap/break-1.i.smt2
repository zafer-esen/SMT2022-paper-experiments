(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0) (S 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (O_S (getS S))
   (defObj)
  )
  (
   (S (n Addr))
  )
))
(declare-fun inv_main13 (Heap AddrRange Int Int Addr) Bool)
(declare-fun inv_main15 (Heap AddrRange Int Int) Bool)
(declare-fun inv_main18 (Heap AddrRange Int Int) Bool)
(declare-fun inv_main3 (Heap AddrRange Int) Bool)
(declare-fun inv_main7 (Heap AddrRange Int Int) Bool)
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (or (not (and (= var2 (newBatchHeap (batchAlloc emptyHeap (O_S (S nullAddr)) 1000000))) (= var1 (newAddrRange (batchAlloc emptyHeap (O_S (S nullAddr)) 1000000))))) (inv_main3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (or (not (and (inv_main15 var3 var2 var1 var0) (and (<= 0 (+ 5 (* (- 1) var0))) (<= 0 (+ (+ 1000000 (* (- 1) var1)) (- 1)))))) (inv_main18 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Heap)) (or (not (and (inv_main13 var9 var8 var7 var6 var5) (and (and (and (is-O_S (read var9 (nthAddrRange var8 var7))) (is-O_S (read var9 (nthAddrRange var8 var7)))) (and (and (and (= var4 (write var9 (nthAddrRange var8 var7) (O_S (S var5)))) (= var3 var8)) (= var2 var7)) (= var1 var6))) (= var0 (+ var2 1))))) (inv_main7 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main3 var4 var3 var2) (= var1 0))) (inv_main7 var4 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main7 var4 var3 var2 var1) (and (not (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))) (= var0 0)))) (inv_main15 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main7 var4 var3 var2 var1) (and (and (<= 0 (+ (+ var1 (- 5)) (- 1))) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))) (= var0 0)))) (inv_main15 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main18 var4 var3 var2 var1) (and (is-O_S (read var4 (nthAddrRange var3 var2))) (= var0 (+ var2 1))))) (inv_main15 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main15 var4 var3 var2 var1) (and (and (not (<= 0 (+ 5 (* (- 1) var1)))) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))) (= var0 (+ var2 1))))) (inv_main15 var4 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Heap)) (or (not (and (inv_main7 var6 var5 var4 var3) (and (and (and (not (<= 0 (+ (+ var3 (- 5)) (- 1)))) (<= 0 (+ (+ 1000000 (* (- 1) var4)) (- 1)))) (= var2 (newHeap (alloc var6 (O_Int var1))))) (= var0 (newAddr (alloc var6 (O_Int var1))))))) (inv_main13 var2 var5 var4 var3 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main13 var4 var3 var2 var1 var0) (not (is-O_S (read var4 (nthAddrRange var3 var2))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main13 var4 var3 var2 var1 var0) (and (is-O_S (read var4 (nthAddrRange var3 var2))) (not (within var3 (nthAddrRange var3 var2))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main13 var4 var3 var2 var1 var0) (and (is-O_S (read var4 (nthAddrRange var3 var2))) (not (is-O_S (read var4 (nthAddrRange var3 var2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (is-O_S (read var3 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (within var2 (nthAddrRange var2 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (not (is-O_S (read var3 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (and (is-O_S (read var3 (nthAddrRange var2 var1))) (not (within var2 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (not (and (inv_main18 var3 var2 var1 var0) (and (is-O_S (read var3 (nthAddrRange var2 var1))) (= (n (getS (read var3 (nthAddrRange var2 var1)))) nullAddr))))))
(check-sat)
