(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main14 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main16 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main17 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main27 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Int AddrRange Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Int AddrRange Int) Bool)
(declare-fun inv_main5 (Heap Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (= var3 emptyHeap) (= var2 100000))) (inv_main5 var3 var1 var2 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ (+ var4 (- 1)) (* (- 1) var3)) (- 1))) (and (not (= var1 0)) (or (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (not (= var1 0))))))) (inv_main27 var6 var3 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main29 var15 var14 var13 var12 var11 var10 var9 var8) (and (and (<= 0 (+ (+ (+ var7 (- 1)) (* (- 1) (+ var6 1))) (- 1))) (and (and (is-O_Int (read var15 (nthAddrRange var9 var14))) (is-O_Int (read var15 (nthAddrRange var9 var14)))) (and (and (and (and (and (and (= var5 (write var15 (nthAddrRange var9 var14) (O_Int var8))) (= var6 var14)) (= var7 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)))) (= var0 (+ var6 1))))) (inv_main27 var5 var0 var7 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main14 var15 var14 var13 var12 var11 var10 var9) (and (and (<= 0 (+ (+ var8 (* (- 1) (+ var7 1))) (- 1))) (and (and (is-O_Int (read var15 (nthAddrRange var9 var14))) (is-O_Int (read var15 (nthAddrRange var9 var14)))) (and (and (and (and (and (and (= var6 (write var15 (nthAddrRange var9 var14) (O_Int var5))) (= var7 var14)) (= var8 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)))) (= var0 (+ var7 1))))) (inv_main14 var6 var0 var8 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main5 var13 var12 var11 var10) (and (and (<= 0 (+ var9 (- 1))) (and (and (and (and (and (and (= var8 (newBatchHeap (batchAlloc emptyHeap (O_Int var7) var11))) (= var6 var12)) (= var9 var11)) (= var5 var10)) (= var4 var3)) (= var2 0)) (= var1 (newAddrRange (batchAlloc emptyHeap (O_Int var7) var11))))) (= var0 0)))) (inv_main14 var8 var0 var9 var5 var4 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main14 var15 var14 var13 var12 var11 var10 var9) (and (and (not (<= 0 (+ (+ var8 (* (- 1) (+ var7 1))) (- 1)))) (and (and (is-O_Int (read var15 (nthAddrRange var9 var14))) (is-O_Int (read var15 (nthAddrRange var9 var14)))) (and (and (and (and (and (and (= var6 (write var15 (nthAddrRange var9 var14) (O_Int var5))) (= var7 var14)) (= var8 var13)) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)))) (= var0 0)))) (inv_main16 var6 var0 var8 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main17 var15 var14 var13 var12 var11 var10 var9) (and (and (and (not (= var8 var7)) (is-O_Int (read var15 (nthAddrRange var9 var14)))) (and (and (and (and (and (and (and (= var6 var15) (= var5 var14)) (= var4 var13)) (= var3 var12)) (= var7 var11)) (= var2 var10)) (= var1 var9)) (= var8 (getInt (read var15 (nthAddrRange var9 var14)))))) (= var0 (+ var5 1))))) (inv_main16 var6 var0 var4 var3 var7 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main17 var16 var15 var14 var13 var12 var11 var10) (and (and (and (and (= var9 var8) (is-O_Int (read var16 (nthAddrRange var10 var15)))) (and (and (and (and (and (and (and (= var7 var16) (= var6 var15)) (= var5 var14)) (= var4 var13)) (= var8 var12)) (= var3 var11)) (= var2 var10)) (= var9 (getInt (read var16 (nthAddrRange var10 var15)))))) (= var1 (+ var6 1))) (= var0 1)))) (inv_main16 var7 var1 var5 var6 var8 var0 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main5 var13 var12 var11 var10) (and (and (not (<= 0 (+ var9 (- 1)))) (and (and (and (and (and (and (= var8 (newBatchHeap (batchAlloc emptyHeap (O_Int var7) var11))) (= var6 var12)) (= var9 var11)) (= var5 var10)) (= var4 var3)) (= var2 0)) (= var1 (newAddrRange (batchAlloc emptyHeap (O_Int var7) var11))))) (= var0 0)))) (inv_main16 var8 var0 var9 var5 var4 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main35 var8 var7 var6 var5 var4 var3 var2 var1) (and (and (<= 0 (+ (+ var5 (* (- 1) (+ var1 1))) (- 1))) (is-O_Int (read var8 (nthAddrRange var2 var1)))) (= var0 (+ var1 1))))) (inv_main35 var8 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main16 var7 var6 var5 var4 var3 var2 var1) (and (and (and (<= 0 (+ var4 (- 1))) (not (= var2 0))) (and (= var2 0) (or (not (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1)))) (not (= var2 0))))) (= var0 0)))) (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main16 var7 var6 var5 var4 var3 var2 var1) (and (and (and (<= 0 (+ var4 (- 1))) (not (= var2 0))) (and (not (<= 0 (+ (+ (+ var5 (- 1)) (* (- 1) var4)) (- 1)))) (and (not (= var2 0)) (or (not (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1)))) (not (= var2 0)))))) (= var0 0)))) (inv_main35 var7 var4 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (inv_main29 var16 var15 var14 var13 var12 var11 var10 var9) (and (and (and (and (<= 0 (+ var8 (- 1))) (not (= var7 0))) (and (not (<= 0 (+ (+ (+ var6 (- 1)) (* (- 1) (+ var5 1))) (- 1)))) (and (and (is-O_Int (read var16 (nthAddrRange var10 var15))) (is-O_Int (read var16 (nthAddrRange var10 var15)))) (and (and (and (and (and (and (= var4 (write var16 (nthAddrRange var10 var15) (O_Int var9))) (= var5 var15)) (= var6 var14)) (= var8 var13)) (= var3 var12)) (= var7 var11)) (= var2 var10))))) (= var1 (+ var5 1))) (= var0 0)))) (inv_main35 var4 var1 var6 var8 var3 var7 var2 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1))) (= var1 0)))) (inv_main17 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1) (and (is-O_Int (read var7 (nthAddrRange var1 (+ var6 1)))) (= var0 (getInt (read var7 (nthAddrRange var1 (+ var6 1)))))))) (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (within var0 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (is-O_Int (read var6 (nthAddrRange var0 var5)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (within var0 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main27 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ var5 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main27 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ var5 1)))) (not (within var0 (nthAddrRange var0 (+ var5 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var6))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var6))) (not (within var1 (nthAddrRange var1 var6))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var6))) (not (is-O_Int (read var7 (nthAddrRange var1 var6)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (within var1 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var0))) (not (within var1 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var0))) (= (getInt (read var7 (nthAddrRange var1 var0))) var3))))))
(check-sat)
