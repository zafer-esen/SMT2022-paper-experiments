(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main15 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main18 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main2 (Heap Int Int) Bool)
(declare-fun inv_main32 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main35 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main36 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main39 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main43 (Heap Int Int Int AddrRange) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Heap)) (or (not (and (and (= var2 emptyHeap) (= var1 0)) (= var0 100000))) (inv_main2 var2 var1 var0))))
(assert (forall ((var0 Heap) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main36 var5 var4 var3 var2 var1) (and (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var2) (- 2))))) (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var2) (- 2)))))) (= var0 (write var5 (nthAddrRange var1 (+ (* 2 var2) (- 2))) (O_Int (+ (* 2 var2) (- 2)))))))) (inv_main35 var0 var4 var3 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main32 var10 var9 var8 var7 var6) (and (and (not (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1)))) (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 2)))))) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var4 var7)) (= var0 var6)) (= var5 (getInt (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 2)))))))))) (inv_main35 var3 var2 var1 var4 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main43 var5 var4 var3 var2 var1) (and (and (<= 0 (+ (+ var4 (* (- 1) (+ var2 1))) (- 1))) (is-O_Int (read var5 (nthAddrRange var1 var2)))) (= var0 (+ var2 1))))) (inv_main43 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int)) (or (not (and (inv_main15 var11 var10 var9 var8 var7) (and (and (<= 0 (+ var6 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1)))))) (<= 0 (+ var12 (- 1))))) (and (and (not (= var5 0)) (and (and (and (and (and (= var4 var11) (= var6 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var13)) (- 1))) (<= 0 (+ (+ 2 (* 1 var13)) (- 1)))) (or (not (<= 0 (+ var13 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var13) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var14) var13))) (= var13 0)) (= var5 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var15)) (- 1))) (<= 0 (+ (+ 2 (* 1 var15)) (- 1)))) (or (not (<= 0 (+ var15 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var15) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var16) var15)))) (= var15 0))) (= var5 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var17)) (- 1))) (<= 0 (+ (+ 2 (* 1 var17)) (- 1)))) (or (not (<= 0 (+ var17 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var17) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var18) var17))) (= var17 0)) (not (<= 0 (+ (+ var10 (* (- 1) var8)) (- 1)))))))) (= var0 0)))) (inv_main43 var4 var6 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int)) (or (not (and (inv_main39 var10 var9 var8 var7 var6) (and (and (<= 0 (+ var5 (- 1))) (and (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var11)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var11)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var11)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1)))))) (<= 0 (+ var11 (* (- 1) (+ var4 1)))))) (and (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))))) (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))))))) (and (and (and (and (= var3 (write var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))) (O_Int (+ (* 2 var7) (- 1))))) (= var5 var9)) (= var2 var8)) (= var4 var7)) (= var1 var6)))) (= var0 0)))) (inv_main43 var3 var5 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int)) (or (not (and (inv_main35 var11 var10 var9 var8 var7) (and (and (<= 0 (+ var6 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1)))))) (<= 0 (+ var12 (* (- 1) (+ var5 1)))))) (and (and (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (is-O_Int (read var11 (nthAddrRange var7 (+ (* 2 var8) (- 1)))))) (and (and (and (and (and (= var3 var11) (= var6 var10)) (= var2 var9)) (= var5 var8)) (= var1 var7)) (= var4 (getInt (read var11 (nthAddrRange var7 (+ (* 2 var8) (- 1)))))))))) (= var0 0)))) (inv_main43 var3 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main18 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var11 (nthAddrRange var7 var8))) (is-O_Int (read var11 (nthAddrRange var7 var8)))) (and (and (and (and (= var6 (write var11 (nthAddrRange var7 var8) (O_Int var5))) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7))) (= var0 (+ var2 1))))) (inv_main15 var6 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (inv_main2 var15 var14 var13) (and (and (and (and (and (and (= var12 (newBatchHeap (batchAlloc var11 (O_Int var10) var9))) (= var8 var9)) (= var7 var6)) (= var5 var4)) (= var3 (newAddrRange (batchAlloc var11 (O_Int var10) var9)))) (and (not (= var2 0)) (and (<= 0 (+ (+ var1 (- 1)) (- 1))) (and (and (and (= var11 var15) (= var9 var1)) (= var6 var13)) (or (and (<= 0 (+ (+ var13 (* (- 1) var1)) (- 1))) (= var2 1)) (and (not (<= 0 (+ (+ var13 (* (- 1) var1)) (- 1)))) (= var2 0))))))) (= var0 0)))) (inv_main15 var12 var8 var7 var0 var3))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int)) (or (not (and (inv_main15 var11 var10 var9 var8 var7) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (<= 0 (+ var12 (- 1)))) (and (and (not (= var5 0)) (and (and (and (and (and (= var4 var11) (= var6 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var13)) (- 1))) (<= 0 (+ (+ 2 (* 1 var13)) (- 1)))) (or (not (<= 0 (+ var13 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var13) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var14) var13))) (= var13 0)) (= var5 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var15)) (- 1))) (<= 0 (+ (+ 2 (* 1 var15)) (- 1)))) (or (not (<= 0 (+ var15 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var15) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var16) var15)))) (= var15 0))) (= var5 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var17)) (- 1))) (<= 0 (+ (+ 2 (* 1 var17)) (- 1)))) (or (not (<= 0 (+ var17 (- 1)))) (<= 0 (+ var10 (- 1))))) (or (not (<= 0 (+ (* (- 1) var17) (- 1)))) (<= 0 (+ (* (- 1) var10) (- 1))))) (= var10 (+ (* 2 var18) var17))) (= var17 0)) (not (<= 0 (+ (+ var10 (* (- 1) var8)) (- 1))))))) (= var0 1)))) (inv_main32 var4 var6 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int)) (or (not (and (inv_main39 var10 var9 var8 var7 var6) (and (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var11)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var11)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var11)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (<= 0 (+ var11 (* (- 1) (+ var4 1))))) (and (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))))) (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))))))) (and (and (and (and (= var3 (write var10 (nthAddrRange var6 (+ (* 2 var7) (- 1))) (O_Int (+ (* 2 var7) (- 1))))) (= var5 var9)) (= var2 var8)) (= var4 var7)) (= var1 var6))) (= var0 (+ var4 1))))) (inv_main32 var3 var5 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int)) (or (not (and (inv_main35 var11 var10 var9 var8 var7) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (<= 0 (+ var12 (* (- 1) (+ var5 1))))) (and (and (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (is-O_Int (read var11 (nthAddrRange var7 (+ (* 2 var8) (- 1)))))) (and (and (and (and (and (= var3 var11) (= var6 var10)) (= var2 var9)) (= var5 var8)) (= var1 var7)) (= var4 (getInt (read var11 (nthAddrRange var7 (+ (* 2 var8) (- 1))))))))) (= var0 (+ var5 1))))) (inv_main32 var3 var6 var2 var0 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main15 var4 var3 var2 var1 var0) (<= 0 (+ (+ var3 (* (- 1) var1)) (- 1))))) (inv_main18 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main32 var10 var9 var8 var7 var6) (and (and (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1))) (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 2)))))) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var4 var7)) (= var0 var6)) (= var5 (getInt (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 2)))))))))) (inv_main36 var3 var2 var1 var4 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main35 var10 var9 var8 var7 var6) (and (and (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1))) (is-O_Int (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1)))))) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var4 var7)) (= var0 var6)) (= var5 (getInt (read var10 (nthAddrRange var6 (+ (* 2 var7) (- 1)))))))))) (inv_main39 var3 var2 var1 var4 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main18 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main18 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var1))) (not (within var0 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main18 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var1))) (not (is-O_Int (read var4 (nthAddrRange var0 var1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main32 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main32 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var1) (- 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main36 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main36 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var1) (- 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main36 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2))))) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 2)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main35 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main35 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var1) (- 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main39 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main39 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var1) (- 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main39 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1))))) (not (is-O_Int (read var4 (nthAddrRange var0 (+ (* 2 var1) (- 1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var1))) (not (within var0 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var1))) (not (<= 0 (+ var1 (* (- 1) (getInt (read var4 (nthAddrRange var0 var1))))))))))))
(check-sat)
