(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main10 (Heap AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main13 (Heap AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main15 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main20 (Heap AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main6 (Heap AddrRange AddrRange Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap) (var6 AddrRange) (var7 Int) (var8 Heap) (var9 Heap)) (or (not (and (and (and (and (= var9 emptyHeap) (and (= var8 (newBatchHeap (batchAlloc emptyHeap (O_Int var7) 100000))) (= var6 (newAddrRange (batchAlloc emptyHeap (O_Int var7) 100000))))) (and (and (= var5 (newBatchHeap (batchAlloc emptyHeap (O_Int var4) 100000))) (= var3 var6)) (= var2 (newAddrRange (batchAlloc emptyHeap (O_Int var4) 100000))))) (= var1 0)) (= var0 0))) (inv_main6 var5 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Heap)) (or (not (and (inv_main20 var6 var5 var4 var3 var2) (and (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var3 8))) (- 1))) (and (is-O_Int (read var6 (nthAddrRange var5 var2))) (is-O_Int (read var6 (nthAddrRange var4 (+ (* 8 var2) 1)))))) (= var1 (+ var3 8))) (= var0 (+ var2 1))))) (inv_main20 var6 var5 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main15 var12 var11 var10 var9 var8 var7) (and (and (and (not (<= 0 (+ (+ 100000 (* (- 1) (+ var6 8))) (- 1)))) (and (and (is-O_Int (read var12 (nthAddrRange var11 var8))) (is-O_Int (read var12 (nthAddrRange var11 var8)))) (and (and (and (and (= var5 (write var12 (nthAddrRange var11 var8) (O_Int var7))) (= var4 var11)) (= var3 var10)) (= var6 var9)) (= var2 var8)))) (= var1 1)) (= var0 0)))) (inv_main20 var5 var4 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (or (not (and (inv_main13 var5 var4 var3 var2 var1) (and (is-O_Int (read var5 (nthAddrRange var3 var2))) (= var0 (getInt (read var5 (nthAddrRange var3 var2))))))) (inv_main15 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Heap)) (or (not (and (inv_main10 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var11 (nthAddrRange var9 var8))) (is-O_Int (read var11 (nthAddrRange var9 var8)))) (and (and (and (and (= var6 (write var11 (nthAddrRange var9 var8) (O_Int var5))) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7))) (= var0 (+ var2 1))))) (inv_main6 var6 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main6 var4 var3 var2 var1 var0) (<= 0 (+ (+ 100000 (* (- 1) var1)) (- 1))))) (inv_main10 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (or (not (and (inv_main6 var5 var4 var3 var2 var1) (and (not (<= 0 (+ (+ 100000 (* (- 1) var2)) (- 1)))) (= var0 1)))) (inv_main13 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main15 var12 var11 var10 var9 var8 var7) (and (and (and (<= 0 (+ (+ 100000 (* (- 1) (+ var6 8))) (- 1))) (and (and (is-O_Int (read var12 (nthAddrRange var11 var8))) (is-O_Int (read var12 (nthAddrRange var11 var8)))) (and (and (and (and (= var5 (write var12 (nthAddrRange var11 var8) (O_Int var7))) (= var4 var11)) (= var3 var10)) (= var6 var9)) (= var2 var8)))) (= var1 (+ var6 8))) (= var0 (+ var2 1))))) (inv_main13 var5 var4 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main10 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main10 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var2 var1))) (not (within var2 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main10 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var2 var1))) (not (is-O_Int (read var4 (nthAddrRange var2 var1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main13 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main13 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var2 var1))) (not (within var2 (nthAddrRange var2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main15 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main15 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var1))) (not (within var4 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main15 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var1))) (not (is-O_Int (read var5 (nthAddrRange var4 var1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (within var3 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var2 (+ (* 8 var0) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (within var2 (nthAddrRange var2 (+ (* 8 var0) 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (not (within var3 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (not (is-O_Int (read var4 (nthAddrRange var2 (+ (* 8 var0) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (is-O_Int (read var4 (nthAddrRange var2 (+ (* 8 var0) 1))))) (not (within var2 (nthAddrRange var2 (+ (* 8 var0) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap)) (not (and (inv_main20 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (is-O_Int (read var4 (nthAddrRange var2 (+ (* 8 var0) 1))))) (not (= (getInt (read var4 (nthAddrRange var3 var0))) (getInt (read var4 (nthAddrRange var2 (+ (* 8 var0) 1)))))))))))
(check-sat)
