(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main25 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main26 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main29 (Heap Int Int AddrRange AddrRange) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main26 var11 var10 var9 var8 var7 var6) (and (and (<= 0 (+ (+ var5 (* (- 1) (+ var4 1))) (- 1))) (and (and (is-O_Int (read var11 (nthAddrRange var7 var9))) (is-O_Int (read var11 (nthAddrRange var7 var9)))) (and (and (and (and (= var3 (write var11 (nthAddrRange var7 var9) (O_Int var6))) (= var5 var10)) (= var4 var9)) (= var2 var8)) (= var1 var7)))) (= var0 (+ var4 1))))) (inv_main22 var3 var5 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 AddrRange) (var12 AddrRange) (var13 AddrRange) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap) (var19 Int) (var20 Heap)) (or (not (and (inv_main2 var20) (and (and (and (and (<= 0 (+ var19 (- 1))) (and (and (and (and (= var18 (newBatchHeap (batchAlloc emptyHeap (O_Int var17) (* 2 var16)))) (= var19 var16)) (= var15 var14)) (= var13 var12)) (= var11 (newAddrRange (batchAlloc emptyHeap (O_Int var17) (* 2 var16)))))) (and (and (and (= var10 (newBatchHeap (batchAlloc emptyHeap (O_Int var9) (* 2 var8)))) (= var16 var8)) (= var14 var7)) (= var12 (newAddrRange (batchAlloc emptyHeap (O_Int var9) (* 2 var8)))))) (and (and (not (= var6 0)) (and (and (= var5 var4) (= var8 var3)) (or (and (<= 0 (+ (+ 1073741823 (* (- 1) var3)) (- 1))) (= var6 1)) (and (not (<= 0 (+ (+ 1073741823 (* (- 1) var3)) (- 1)))) (= var6 0))))) (and (not (= var2 0)) (and (and (= var4 var20) (= var3 var1)) (or (and (<= 0 (+ (+ var1 (- 1)) (- 1))) (= var2 1)) (and (not (<= 0 (+ (+ var1 (- 1)) (- 1)))) (= var2 0))))))) (= var0 0)))) (inv_main22 var18 var19 var0 var13 var11))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main22 var5 var4 var3 var2 var1) (and (is-O_Int (read var5 (nthAddrRange var2 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (= var0 (getInt (read var5 (nthAddrRange var2 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))) (inv_main25 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main29 var5 var4 var3 var2 var1) (and (and (<= 0 (+ (+ (* 2 var4) (* (- 1) (+ var3 1))) (- 1))) (and (is-O_Int (read var5 (nthAddrRange var1 var3))) (is-O_Int (read var5 (nthAddrRange var2 var3))))) (= var0 (+ var3 1))))) (inv_main29 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main26 var11 var10 var9 var8 var7 var6) (and (and (<= 0 (+ (* 2 var5) (- 1))) (and (not (<= 0 (+ (+ var5 (* (- 1) (+ var4 1))) (- 1)))) (and (and (is-O_Int (read var11 (nthAddrRange var7 var9))) (is-O_Int (read var11 (nthAddrRange var7 var9)))) (and (and (and (and (= var3 (write var11 (nthAddrRange var7 var9) (O_Int var6))) (= var5 var10)) (= var4 var9)) (= var2 var8)) (= var1 var7))))) (= var0 0)))) (inv_main29 var3 var5 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 AddrRange) (var12 AddrRange) (var13 AddrRange) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap) (var19 Int) (var20 Heap)) (or (not (and (inv_main2 var20) (and (and (<= 0 (+ (* 2 var19) (- 1))) (and (and (and (not (<= 0 (+ var19 (- 1)))) (and (and (and (and (= var18 (newBatchHeap (batchAlloc emptyHeap (O_Int var17) (* 2 var16)))) (= var19 var16)) (= var15 var14)) (= var13 var12)) (= var11 (newAddrRange (batchAlloc emptyHeap (O_Int var17) (* 2 var16)))))) (and (and (and (= var10 (newBatchHeap (batchAlloc emptyHeap (O_Int var9) (* 2 var8)))) (= var16 var8)) (= var14 var7)) (= var12 (newAddrRange (batchAlloc emptyHeap (O_Int var9) (* 2 var8)))))) (and (and (not (= var6 0)) (and (and (= var5 var4) (= var8 var3)) (or (and (<= 0 (+ (+ 1073741823 (* (- 1) var3)) (- 1))) (= var6 1)) (and (not (<= 0 (+ (+ 1073741823 (* (- 1) var3)) (- 1)))) (= var6 0))))) (and (not (= var2 0)) (and (and (= var4 var20) (= var3 var1)) (or (and (<= 0 (+ (+ var1 (- 1)) (- 1))) (= var2 1)) (and (not (<= 0 (+ (+ var1 (- 1)) (- 1)))) (= var2 0)))))))) (= var0 0)))) (inv_main29 var18 var19 var0 var13 var11))))
(assert (forall ((var0 Heap) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main25 var6 var5 var4 var3 var2 var1) (and (and (is-O_Int (read var6 (nthAddrRange var2 (+ (* 2 var5) (* (- 1) (+ var4 1)))))) (is-O_Int (read var6 (nthAddrRange var2 (+ (* 2 var5) (* (- 1) (+ var4 1))))))) (= var0 (write var6 (nthAddrRange var2 (+ (* 2 var5) (* (- 1) (+ var4 1)))) (O_Int var1)))))) (inv_main24 var0 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main24 var5 var4 var3 var2 var1) (and (is-O_Int (read var5 (nthAddrRange var2 var3))) (= var0 (getInt (read var5 (nthAddrRange var2 var3))))))) (inv_main26 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main22 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))) (not (within var1 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (not (within var1 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (not (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var3))) (not (within var1 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var3))) (not (is-O_Int (read var5 (nthAddrRange var1 var3)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (within var1 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (not (is-O_Int (read var4 (nthAddrRange var1 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (is-O_Int (read var4 (nthAddrRange var1 var2)))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (is-O_Int (read var4 (nthAddrRange var1 var2)))) (not (= (getInt (read var4 (nthAddrRange var0 var2))) (getInt (read var4 (nthAddrRange var1 var2))))))))))
(check-sat)
