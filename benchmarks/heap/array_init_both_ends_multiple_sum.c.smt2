(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main12 (Heap Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main15 (Heap Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main16 (Heap Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main18 (Heap Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main21 (Heap Int AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Heap Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main9 (Heap Int AddrRange AddrRange Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (= var12 emptyHeap) (= var11 100000)) (and (and (= var10 (newBatchHeap (batchAlloc emptyHeap (O_Int var9) var11))) (= var8 var11)) (= var7 (newAddrRange (batchAlloc emptyHeap (O_Int var9) var11))))) (and (and (and (= var6 (newBatchHeap (batchAlloc emptyHeap (O_Int var5) var8))) (= var4 var8)) (= var3 var7)) (= var2 (newAddrRange (batchAlloc emptyHeap (O_Int var5) var8))))) (= var1 0))) (inv_main6 var6 var4 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (inv_main12 var6 var5 var4 var3 var2 var1) (and (and (not (<= 0 (+ var5 (- 1)))) (not (<= 0 (+ (+ var5 (* (- 1) var2)) (- 1))))) (= var0 0)))) (inv_main16 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 AddrRange) (var14 AddrRange) (var15 Int) (var16 Heap)) (or (not (and (inv_main21 var16 var15 var14 var13 var12 var11 var10 var9 var8) (and (and (not (<= 0 (+ (+ var7 (* (- 1) (+ var6 1))) (- 1)))) (and (is-O_Int (read var16 (nthAddrRange var13 (+ (+ var8 (* (- 1) var12)) (- 1))))) (and (and (and (and (and (and (= var5 var16) (= var7 var15)) (= var4 var14)) (= var3 var13)) (= var6 var12)) (= var2 var11)) (= var1 (+ var10 (+ var9 (* (- 1) (getInt (read var16 (nthAddrRange var13 (+ (+ var8 (* (- 1) var12)) (- 1)))))))))))) (= var0 (+ var6 1))))) (inv_main16 var5 var7 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Heap)) (or (not (and (inv_main18 var13 var12 var11 var10 var9 var8) (and (is-O_Int (read var13 (nthAddrRange var11 var9))) (and (and (and (and (and (and (and (= var7 var13) (= var6 var12)) (= var5 var11)) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var8)) (= var0 (getInt (read var13 (nthAddrRange var11 var9)))))))) (inv_main21 var7 var6 var5 var4 var3 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (inv_main12 var6 var5 var4 var3 var2 var1) (and (and (<= 0 (+ var5 (- 1))) (not (<= 0 (+ (+ var5 (* (- 1) var2)) (- 1))))) (= var0 0)))) (inv_main18 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 AddrRange) (var14 AddrRange) (var15 Int) (var16 Heap)) (or (not (and (inv_main21 var16 var15 var14 var13 var12 var11 var10 var9 var8) (and (and (<= 0 (+ (+ var7 (* (- 1) (+ var6 1))) (- 1))) (and (is-O_Int (read var16 (nthAddrRange var13 (+ (+ var8 (* (- 1) var12)) (- 1))))) (and (and (and (and (and (and (= var5 var16) (= var7 var15)) (= var4 var14)) (= var3 var13)) (= var6 var12)) (= var2 var11)) (= var1 (+ var10 (+ var9 (* (- 1) (getInt (read var16 (nthAddrRange var13 (+ (+ var8 (* (- 1) var12)) (- 1)))))))))))) (= var0 (+ var6 1))))) (inv_main18 var5 var7 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Heap)) (or (not (and (inv_main15 var13 var12 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var13 (nthAddrRange var10 (+ (+ var7 (* (- 1) var9)) (- 1))))) (is-O_Int (read var13 (nthAddrRange var10 (+ (+ var7 (* (- 1) var9)) (- 1)))))) (and (and (and (and (and (= var6 (write var13 (nthAddrRange var10 (+ (+ var7 (* (- 1) var9)) (- 1))) (O_Int var9))) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8))) (= var0 (+ var2 1))))) (inv_main12 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (inv_main6 var6 var5 var4 var3 var2 var1) (and (not (<= 0 (+ var5 (- 1)))) (= var0 0)))) (inv_main12 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Heap)) (or (not (and (inv_main9 var12 var11 var10 var9 var8 var7) (and (and (not (<= 0 (+ (+ var6 (* (- 1) (+ var5 1))) (- 1)))) (and (and (is-O_Int (read var12 (nthAddrRange var10 var8))) (is-O_Int (read var12 (nthAddrRange var10 var8)))) (and (and (and (and (and (= var4 (write var12 (nthAddrRange var10 var8) (O_Int var8))) (= var6 var11)) (= var3 var10)) (= var2 var9)) (= var5 var8)) (= var1 var7)))) (= var0 0)))) (inv_main12 var4 var6 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (or (not (and (inv_main12 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var4 (* (- 1) var1)) (- 1))))) (inv_main15 var5 var4 var3 var2 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (inv_main6 var6 var5 var4 var3 var2 var1) (and (<= 0 (+ var5 (- 1))) (= var0 0)))) (inv_main9 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Heap)) (or (not (and (inv_main9 var12 var11 var10 var9 var8 var7) (and (and (<= 0 (+ (+ var6 (* (- 1) (+ var5 1))) (- 1))) (and (and (is-O_Int (read var12 (nthAddrRange var10 var8))) (is-O_Int (read var12 (nthAddrRange var10 var8)))) (and (and (and (and (and (= var4 (write var12 (nthAddrRange var10 var8) (O_Int var8))) (= var6 var11)) (= var3 var10)) (= var2 var9)) (= var5 var8)) (= var1 var7)))) (= var0 (+ var5 1))))) (inv_main9 var4 var6 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main9 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main9 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var1))) (not (within var3 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main9 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var1))) (not (is-O_Int (read var5 (nthAddrRange var3 var1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main15 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var3 (+ (+ var0 (* (- 1) var2)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main15 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var3 (+ (+ var0 (* (- 1) var2)) (- 1))))) (not (within var3 (nthAddrRange var3 (+ (+ var0 (* (- 1) var2)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main15 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var3 (+ (+ var0 (* (- 1) var2)) (- 1))))) (not (is-O_Int (read var6 (nthAddrRange var3 (+ (+ var0 (* (- 1) var2)) (- 1)))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main18 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main18 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var1))) (not (within var3 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (not (and (inv_main21 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var8 (nthAddrRange var5 (+ (+ var0 (* (- 1) var4)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Heap)) (not (and (inv_main21 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var8 (nthAddrRange var5 (+ (+ var0 (* (- 1) var4)) (- 1))))) (not (within var5 (nthAddrRange var5 (+ (+ var0 (* (- 1) var4)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap)) (not (and (inv_main16 var5 var4 var3 var2 var1 var0) (not (= var0 0))))))
(check-sat)
