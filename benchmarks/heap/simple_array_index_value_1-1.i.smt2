(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main12 (Heap AddrRange Int) Bool)
(declare-fun inv_main13 (Heap AddrRange Int) Bool)
(declare-fun inv_main4 (Heap AddrRange Int) Bool)
(declare-fun inv_main7 (Heap AddrRange Int) Bool)
(declare-fun inv_main9 (Heap AddrRange Int) Bool)
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Heap) (var4 Int)) (or (not (and (and (<= 0 var4) (= var3 emptyHeap)) (and (= var2 (newBatchHeap (batchAlloc emptyHeap (O_UInt var1) 1000))) (= var0 (newAddrRange (batchAlloc emptyHeap (O_UInt var1) 1000)))))) (inv_main4 var2 var0 var4))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Heap) (var7 Int) (var8 Int)) (or (not (and (inv_main7 var6 var5 var4) (and (and (not (<= 0 (+ (+ 1000 (* (- 1) (+ var3 1))) (- 1)))) (and (and (is-O_UInt (read var6 (nthAddrRange var5 var4))) (is-O_UInt (read var6 (nthAddrRange var5 var4)))) (and (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var7)) (- 1))) (<= 0 (+ (+ 2 (* 1 var7)) (- 1)))) (or (not (<= 0 (+ var7 (- 1)))) (<= 0 (+ var4 (- 1))))) (or (not (<= 0 (+ (* (- 1) var7) (- 1)))) (<= 0 (+ (* (- 1) var4) (- 1))))) (= var4 (+ (* 2 var8) var7))) (= var2 (write var6 (nthAddrRange var5 var4) (O_UInt var7)))) (= var1 var5)) (= var3 var4)))) (= var0 0)))) (inv_main9 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (or (not (and (inv_main12 var3 var2 var1) (and (is-O_UInt (read var3 (nthAddrRange var2 var1))) (= var0 (+ var1 1))))) (inv_main9 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (or (not (and (inv_main13 var3 var2 var1) (and (is-O_UInt (read var3 (nthAddrRange var2 var1))) (= var0 (+ var1 1))))) (inv_main9 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var2 var1 var0) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var3)) (- 1))) (<= 0 (+ (+ 2 (* 1 var3)) (- 1)))) (or (not (<= 0 (+ var3 (- 1)))) (<= 0 (+ var0 (- 1))))) (or (not (<= 0 (+ (* (- 1) var3) (- 1)))) (<= 0 (+ (* (- 1) var0) (- 1))))) (= var0 (+ (* 2 var4) var3)))) (= var3 0))) (<= 0 (+ (+ 1000 (* (- 1) var0)) (- 1)))))) (inv_main13 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap)) (or (not (and (inv_main4 var3 var2 var1) (= var0 0))) (inv_main7 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Heap) (var7 Int) (var8 Int)) (or (not (and (inv_main7 var6 var5 var4) (and (and (<= 0 (+ (+ 1000 (* (- 1) (+ var3 1))) (- 1))) (and (and (is-O_UInt (read var6 (nthAddrRange var5 var4))) (is-O_UInt (read var6 (nthAddrRange var5 var4)))) (and (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var7)) (- 1))) (<= 0 (+ (+ 2 (* 1 var7)) (- 1)))) (or (not (<= 0 (+ var7 (- 1)))) (<= 0 (+ var4 (- 1))))) (or (not (<= 0 (+ (* (- 1) var7) (- 1)))) (<= 0 (+ (* (- 1) var4) (- 1))))) (= var4 (+ (* 2 var8) var7))) (= var2 (write var6 (nthAddrRange var5 var4) (O_UInt var7)))) (= var1 var5)) (= var3 var4)))) (= var0 (+ var3 1))))) (inv_main7 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var2 var1 var0) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var3)) (- 1))) (<= 0 (+ (+ 2 (* 1 var3)) (- 1)))) (or (not (<= 0 (+ var3 (- 1)))) (<= 0 (+ var0 (- 1))))) (or (not (<= 0 (+ (* (- 1) var3) (- 1)))) (<= 0 (+ (* (- 1) var0) (- 1))))) (= var0 (+ (* 2 var4) var3))) (= var3 0)) (<= 0 (+ (+ 1000 (* (- 1) var0)) (- 1)))))) (inv_main12 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main7 var2 var1 var0) (not (is-O_UInt (read var2 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main7 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (not (within var1 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main7 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (not (is-O_UInt (read var2 (nthAddrRange var1 var0)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main12 var2 var1 var0) (not (is-O_UInt (read var2 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main12 var2 var1 var0) (not (within var1 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main12 var2 var1 var0) (not (is-O_UInt (read var2 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main12 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (not (within var1 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main12 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (not (= (getUInt (read var2 (nthAddrRange var1 var0))) 0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (not (is-O_UInt (read var2 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (not (within var1 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (not (is-O_UInt (read var2 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (not (within var1 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (and (is-O_UInt (read var2 (nthAddrRange var1 var0))) (= (getUInt (read var2 (nthAddrRange var1 var0))) 0))))))
(check-sat)
