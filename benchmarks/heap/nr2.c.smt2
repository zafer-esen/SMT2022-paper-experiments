(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main30 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main33 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main34 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main39 (Heap Int Int Int Int Int AddrRange Int) Bool)
(assert (forall ((var0 Int) (var1 Heap)) (or (not (and (= var1 emptyHeap) (= var0 0))) (inv_main2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1) (and (<= 0 (+ (+ var7 (* (- 1) (+ var4 1))) (- 1))) (= var0 (+ var4 1))))) (inv_main36 var8 var7 var6 var5 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (or (not (and (inv_main30 var7 var6 var5 var4 var3 var2 var1) (and (and (<= 0 (+ var6 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var8)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var8)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var8)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var8))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1)))))) (<= 0 (+ var8 (* (- 1) (+ var3 1)))))) (not (<= 0 (+ var2 (- 1)))))) (= var0 0)))) (inv_main36 var7 var6 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap) (var17 Heap) (var18 Int) (var19 Int) (var20 Int) (var21 Heap) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int)) (or (not (and (inv_main2 var21 var20) (and (and (<= 0 (+ var19 (- 1))) (and (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var19 (* (- 2) var22)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var19 (* (- 2) var22)))) (- 1)))) (or (not (<= 0 (+ (+ var19 (* (- 2) var22)) (- 1)))) (<= 0 (+ var19 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var19 (* (- 2) var22))) (- 1)))) (<= 0 (+ (* (- 1) var19) (- 1)))))) (<= 0 (+ var22 (- 1))))) (and (and (not (= var18 0)) (and (and (and (and (and (and (and (= var17 var16) (= var19 var15)) (= var14 var13)) (= var12 var11)) (= var10 var9)) (= var8 var7)) (= var6 var5)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var23)) (- 1))) (<= 0 (+ (+ 2 (* 1 var23)) (- 1)))) (or (not (<= 0 (+ var23 (- 1)))) (<= 0 (+ var15 (- 1))))) (or (not (<= 0 (+ (* (- 1) var23) (- 1)))) (<= 0 (+ (* (- 1) var15) (- 1))))) (= var15 (+ (* 2 var24) var23))) (= var23 0)) (= var18 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var25)) (- 1))) (<= 0 (+ (+ 2 (* 1 var25)) (- 1)))) (or (not (<= 0 (+ var25 (- 1)))) (<= 0 (+ var15 (- 1))))) (or (not (<= 0 (+ (* (- 1) var25) (- 1)))) (<= 0 (+ (* (- 1) var15) (- 1))))) (= var15 (+ (* 2 var26) var25)))) (= var25 0))) (= var18 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var27)) (- 1))) (<= 0 (+ (+ 2 (* 1 var27)) (- 1)))) (or (not (<= 0 (+ var27 (- 1)))) (<= 0 (+ var15 (- 1))))) (or (not (<= 0 (+ (* (- 1) var27) (- 1)))) (<= 0 (+ (* (- 1) var15) (- 1))))) (= var15 (+ (* 2 var28) var27))) (= var27 0)) (and (and (and (and (and (and (= var16 (newBatchHeap (batchAlloc emptyHeap (O_Int var4) var3))) (= var15 var3)) (= var13 1)) (= var11 2)) (= var9 var2)) (= var7 var1)) (= var5 (newAddrRange (batchAlloc emptyHeap (O_Int var4) var3))))))) (<= 0 (+ (+ var3 (- 1)) (- 1))))) (= var0 0)))) (inv_main36 var17 var19 var14 var12 var0 var8 var6))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (* (- 1) var3))) (<= 0 (+ var1 (- 1)))))) (inv_main33 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main36 var14 var13 var12 var11 var10 var9 var8) (and (and (and (is-O_Int (read var14 (nthAddrRange var8 var10))) (not (<= 0 (+ (getInt (read var14 (nthAddrRange var8 var10))) (* (- 1) var11))))) (is-O_Int (read var14 (nthAddrRange var8 var10)))) (and (and (and (and (and (and (and (= var7 var14) (= var6 var13)) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (or (and (= (getInt (read var14 (nthAddrRange var8 var10))) 0) (= var0 1)) (and (not (= (getInt (read var14 (nthAddrRange var8 var10))) 0)) (= var0 0))))))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main36 var7 var6 var5 var4 var3 var2 var1) (and (and (is-O_Int (read var7 (nthAddrRange var1 var3))) (<= 0 (+ (getInt (read var7 (nthAddrRange var1 var3))) (* (- 1) var4)))) (= var0 1)))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int)) (or (not (and (inv_main30 var8 var7 var6 var5 var4 var3 var2) (and (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var7 (* (- 2) var9)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var7 (* (- 2) var9)))) (- 1)))) (or (not (<= 0 (+ (+ var7 (* (- 2) var9)) (- 1)))) (<= 0 (+ var7 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var7 (* (- 2) var9))) (- 1)))) (<= 0 (+ (* (- 1) var7) (- 1))))) (<= 0 (+ var9 (* (- 1) (+ var4 1))))) (not (<= 0 (+ var3 (- 1))))) (= var1 (+ var4 1))) (= var0 2)))) (inv_main30 var8 var7 var6 var5 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main33 var14 var13 var12 var11 var10 var9 var8) (and (and (and (is-O_Int (read var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9))))) (is-O_Int (read var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9)))))) (and (and (and (and (and (and (= var7 (write var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9))) (O_Int var9))) (= var6 var13)) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8))) (= var0 (+ var2 (- 1)))))) (inv_main30 var7 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main34 var14 var13 var12 var11 var10 var9 var8) (and (and (and (is-O_Int (read var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9))))) (is-O_Int (read var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9)))))) (and (and (and (and (and (and (= var7 (write var14 (nthAddrRange var8 (+ (* 2 var10) (* (- 1) var9))) (O_Int 0))) (= var6 var13)) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8))) (= var0 (+ var2 (- 1)))))) (inv_main30 var7 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Int) (var22 Heap) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int)) (or (not (and (inv_main2 var22 var21) (and (and (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var20 (* (- 2) var23)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var20 (* (- 2) var23)))) (- 1)))) (or (not (<= 0 (+ (+ var20 (* (- 2) var23)) (- 1)))) (<= 0 (+ var20 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var20 (* (- 2) var23))) (- 1)))) (<= 0 (+ (* (- 1) var20) (- 1))))) (<= 0 (+ var23 (- 1)))) (and (and (not (= var19 0)) (and (and (and (and (and (and (and (= var18 var17) (= var20 var16)) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 2 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (= var16 (+ (* 2 var25) var24))) (= var24 0)) (= var19 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var26)) (- 1))) (<= 0 (+ (+ 2 (* 1 var26)) (- 1)))) (or (not (<= 0 (+ var26 (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) var26) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (= var16 (+ (* 2 var27) var26)))) (= var26 0))) (= var19 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var28)) (- 1))) (<= 0 (+ (+ 2 (* 1 var28)) (- 1)))) (or (not (<= 0 (+ var28 (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) var28) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (= var16 (+ (* 2 var29) var28))) (= var28 0)) (and (and (and (and (and (and (= var17 (newBatchHeap (batchAlloc emptyHeap (O_Int var5) var4))) (= var16 var4)) (= var14 1)) (= var12 2)) (= var10 var3)) (= var8 var2)) (= var6 (newAddrRange (batchAlloc emptyHeap (O_Int var5) var4))))))) (<= 0 (+ (+ var4 (- 1)) (- 1)))) (= var1 1)) (= var0 2)))) (inv_main30 var18 var20 var15 var13 var1 var0 var7))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var1 (* (- 1) var3)))) (<= 0 (+ var1 (- 1)))))) (inv_main34 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var6 (nthAddrRange var0 var2))) (* (- 1) var3))))) (not (is-O_Int (read var6 (nthAddrRange var0 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (and (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var6 (nthAddrRange var0 var2))) (* (- 1) var3))))) (is-O_Int (read var6 (nthAddrRange var0 var2)))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 0)))))
(check-sat)
