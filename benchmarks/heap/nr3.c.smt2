(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main33 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int AddrRange Int) Bool)
(assert (forall ((var0 Int) (var1 Heap)) (or (not (and (= var1 emptyHeap) (= var0 0))) (inv_main2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (* (- 1) var3))) (<= 0 (+ var1 (- 1)))))) (inv_main32 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main38 var7 var6 var5 var4 var3 var2 var1) (and (<= 0 (+ (+ var6 (* (- 1) (+ var4 1))) (- 1))) (= var0 (+ var4 1))))) (inv_main35 var7 var6 var5 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (and (inv_main29 var6 var5 var4 var3 var2 var1) (and (and (<= 0 (+ var5 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var5 (* (- 3) var7)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var5 (* (- 3) var7)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 3) var7)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 3) var7))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1)))))) (<= 0 (+ var7 (* (- 1) (+ var3 1)))))) (not (<= 0 (+ var2 (- 1)))))) (= var0 0)))) (inv_main35 var6 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap) (var15 Heap) (var16 Int) (var17 Int) (var18 Int) (var19 Heap) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int)) (or (not (and (inv_main2 var19 var18) (and (and (<= 0 (+ var17 (- 1))) (and (and (not (or (not (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var17 (* (- 3) var20)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var17 (* (- 3) var20)))) (- 1)))) (or (not (<= 0 (+ (+ var17 (* (- 3) var20)) (- 1)))) (<= 0 (+ var17 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var17 (* (- 3) var20))) (- 1)))) (<= 0 (+ (* (- 1) var17) (- 1)))))) (<= 0 (+ var20 (- 1))))) (and (and (not (= var16 0)) (and (and (and (and (and (and (= var15 var14) (= var17 var13)) (= var12 var11)) (= var10 var9)) (= var8 var7)) (= var6 var5)) (or (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var21)) (- 1))) (<= 0 (+ (+ 3 (* 1 var21)) (- 1)))) (or (not (<= 0 (+ var21 (- 1)))) (<= 0 (+ var13 (- 1))))) (or (not (<= 0 (+ (* (- 1) var21) (- 1)))) (<= 0 (+ (* (- 1) var13) (- 1))))) (= var13 (+ (* 3 var22) var21))) (= var21 0)) (= var16 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var23)) (- 1))) (<= 0 (+ (+ 3 (* 1 var23)) (- 1)))) (or (not (<= 0 (+ var23 (- 1)))) (<= 0 (+ var13 (- 1))))) (or (not (<= 0 (+ (* (- 1) var23) (- 1)))) (<= 0 (+ (* (- 1) var13) (- 1))))) (= var13 (+ (* 3 var24) var23)))) (= var23 0))) (= var16 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var25)) (- 1))) (<= 0 (+ (+ 3 (* 1 var25)) (- 1)))) (or (not (<= 0 (+ var25 (- 1)))) (<= 0 (+ var13 (- 1))))) (or (not (<= 0 (+ (* (- 1) var25) (- 1)))) (<= 0 (+ (* (- 1) var13) (- 1))))) (= var13 (+ (* 3 var26) var25))) (= var25 0)) (and (and (and (and (and (= var14 (newBatchHeap (batchAlloc emptyHeap (O_Int var4) var3))) (= var13 var3)) (= var11 2)) (= var9 var2)) (= var7 var1)) (= var5 (newAddrRange (batchAlloc emptyHeap (O_Int var4) var3))))))) (<= 0 (+ (+ var3 (- 1)) (- 1))))) (= var0 0)))) (inv_main35 var15 var17 var12 var0 var8 var6))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main35 var12 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var12 (nthAddrRange var7 var9))) (not (<= 0 (+ (getInt (read var12 (nthAddrRange var7 var9))) (* (- 1) var10))))) (is-O_Int (read var12 (nthAddrRange var7 var9)))) (and (and (and (and (and (and (= var6 var12) (= var5 var11)) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (or (and (= (getInt (read var12 (nthAddrRange var7 var9))) 0) (= var0 1)) (and (not (= (getInt (read var12 (nthAddrRange var7 var9))) 0)) (= var0 0))))))) (inv_main38 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main35 var6 var5 var4 var3 var2 var1) (and (and (is-O_Int (read var6 (nthAddrRange var1 var3))) (<= 0 (+ (getInt (read var6 (nthAddrRange var1 var3))) (* (- 1) var4)))) (= var0 1)))) (inv_main38 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var1 (* (- 1) var3)))) (<= 0 (+ var1 (- 1)))))) (inv_main33 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (or (not (and (inv_main29 var7 var6 var5 var4 var3 var2) (and (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var6 (* (- 3) var8)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var6 (* (- 3) var8)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 3) var8)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 3) var8))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (<= 0 (+ var8 (* (- 1) (+ var4 1))))) (not (<= 0 (+ var3 (- 1))))) (= var1 (+ var4 1))) (= var0 3)))) (inv_main29 var7 var6 var5 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main32 var12 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8))))) (is-O_Int (read var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8)))))) (and (and (and (and (and (= var6 (write var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8))) (O_Int var8))) (= var5 var11)) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7))) (= var0 (+ var2 (- 1)))))) (inv_main29 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main33 var12 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8))))) (is-O_Int (read var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8)))))) (and (and (and (and (and (= var6 (write var12 (nthAddrRange var7 (+ (* 3 var9) (* (- 1) var8))) (O_Int 0))) (= var5 var11)) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7))) (= var0 (+ var2 (- 1)))))) (inv_main29 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Heap) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int)) (or (not (and (inv_main2 var20 var19) (and (and (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var18 (* (- 3) var21)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var18 (* (- 3) var21)))) (- 1)))) (or (not (<= 0 (+ (+ var18 (* (- 3) var21)) (- 1)))) (<= 0 (+ var18 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var18 (* (- 3) var21))) (- 1)))) (<= 0 (+ (* (- 1) var18) (- 1))))) (<= 0 (+ var21 (- 1)))) (and (and (not (= var17 0)) (and (and (and (and (and (and (= var16 var15) (= var18 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (or (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var22)) (- 1))) (<= 0 (+ (+ 3 (* 1 var22)) (- 1)))) (or (not (<= 0 (+ var22 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var22) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 3 var23) var22))) (= var22 0)) (= var17 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 3 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 3 var25) var24)))) (= var24 0))) (= var17 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var26)) (- 1))) (<= 0 (+ (+ 3 (* 1 var26)) (- 1)))) (or (not (<= 0 (+ var26 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var26) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 3 var27) var26))) (= var26 0)) (and (and (and (and (and (= var15 (newBatchHeap (batchAlloc emptyHeap (O_Int var5) var4))) (= var14 var4)) (= var12 2)) (= var10 var3)) (= var8 var2)) (= var6 (newAddrRange (batchAlloc emptyHeap (O_Int var5) var4))))))) (<= 0 (+ (+ var4 (- 1)) (- 1)))) (= var1 1)) (= var0 3)))) (inv_main29 var16 var18 var13 var1 var0 var7))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var2))) (* (- 1) var3))))) (not (is-O_Int (read var5 (nthAddrRange var0 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var2))) (* (- 1) var3))))) (is-O_Int (read var5 (nthAddrRange var0 var2)))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (= var0 0)))))
(check-sat)
