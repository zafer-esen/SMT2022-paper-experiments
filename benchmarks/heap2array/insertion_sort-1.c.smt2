(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main11 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main13 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main14 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main18 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main24 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main26 (Heap Int Int Int Int Int AddrRange Int) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Int AddrRange) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main11 var15 var14 var13 var12 var11 var10 var9) (= var0 (+ var7 1))) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var7 var12)) (= var4 var13)) (= var8 var14)) (= var6 (writeHeap var15 (nthAddrRange var9 var12) (O_Int var5)))) (is-O_Int (readHeap var15 (nthAddrRange var9 var12)))) (is-O_Int (readHeap var15 (nthAddrRange var9 var12)))) (<= 0 (+ (+ (* (- 1) (+ var7 1)) var8) (* (- 1) 1))))) (inv_main11 var6 var8 var4 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (batchAllocPostHeap emptyHeap var12 (O_Int var11) var10) (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var10)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var13 var10)) true) (<= 0 (+ var13 (* (- 1) 1)))))) (inv_main11 var12 var13 var9 var0 var5 var3 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var10)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var13 var10)) true) (<= 0 (+ var13 (* (- 1) 1))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var11) var10 var10))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main18 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 var4)))) (inv_main19 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap) (var15 Int) (var16 AddrRange) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main18 var22 var21 var20 var19 var18 var17 var16) (or (and (<= 0 (+ (+ (* (- 1) var9) var7) (* (- 1) 1))) (= var15 1)) (and (not (<= 0 (+ (+ (* (- 1) var9) var7) (* (- 1) 1)))) (= var15 0)))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 (getInt (readHeap var22 (nthAddrRange var16 var20))))) (= var8 var16)) (= var9 var17)) (= var10 var18)) (= var11 var19)) (= var12 var20)) (= var13 var21)) (= var14 var22)) (is-O_Int (readHeap var22 (nthAddrRange var16 var20)))) (<= 0 var20)) (= var15 0))) (inv_main19 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap) (var14 Int) (var15 Int) (var16 AddrRange) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main18 var22 var21 var20 var19 var18 var17 var16) (or (and (<= 0 (+ (+ (* (- 1) var8) var6) (* (- 1) 1))) (= var14 1)) (and (not (<= 0 (+ (+ (* (- 1) var8) var6) (* (- 1) 1)))) (= var14 0)))) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var15 var11)) (= var4 var12)) (= var5 var13)) (= var6 (getInt (readHeap var22 (nthAddrRange var16 var20))))) (= var7 var16)) (= var8 var17)) (= var9 var18)) (= var10 var19)) (= var11 var20)) (= var12 var21)) (= var13 var22)) (is-O_Int (readHeap var22 (nthAddrRange var16 var20)))) (<= 0 var20)) (not (= var14 0))) (<= 0 (+ (+ (* (- 1) var15) 2) (* (- 1) 1))))) (inv_main24 var5 var4 var15 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main14 var15 var14 var13 var12 var11 var10 var9) (= var0 (+ var5 (* (- 1) 1)))) (= var1 (getInt (readHeap var15 (nthAddrRange var9 var12))))) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (= var8 var15)) (is-O_Int (readHeap var15 (nthAddrRange var9 var12))))) (inv_main18 var8 var7 var0 var5 var4 var1 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main26 var15 var14 var13 var12 var11 var10 var9 var8) (= var0 (+ var5 (* (- 1) 1)))) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 (writeHeap var15 (nthAddrRange var9 (+ var13 1)) (O_Int var8)))) (is-O_Int (readHeap var15 (nthAddrRange var9 (+ var13 1))))) (is-O_Int (readHeap var15 (nthAddrRange var9 (+ var13 1)))))) (inv_main18 var7 var6 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap) (var15 Int) (var16 Int) (var17 AddrRange) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main18 var23 var22 var21 var20 var19 var18 var17) (= var0 (+ var16 (* (- 1) 1)))) (or (and (<= 0 (+ (+ (* (- 1) var9) var7) (* (- 1) 1))) (= var15 1)) (and (not (<= 0 (+ (+ (* (- 1) var9) var7) (* (- 1) 1)))) (= var15 0)))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var16 var12)) (= var5 var13)) (= var6 var14)) (= var7 (getInt (readHeap var23 (nthAddrRange var17 var21))))) (= var8 var17)) (= var9 var18)) (= var10 var19)) (= var11 var20)) (= var12 var21)) (= var13 var22)) (= var14 var23)) (is-O_Int (readHeap var23 (nthAddrRange var17 var21)))) (<= 0 var21)) (not (= var15 0))) (not (<= 0 (+ (+ (* (- 1) var16) 2) (* (- 1) 1)))))) (inv_main18 var6 var5 var0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main24 var7 var6 var5 var4 var3 var2 var1) (= var0 (getInt (readHeap var7 (nthAddrRange var1 var5))))) (is-O_Int (readHeap var7 (nthAddrRange var1 var5))))) (inv_main26 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main19 var14 var13 var12 var11 var10 var9 var8) (= var0 (+ var4 1))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 (writeHeap var14 (nthAddrRange var8 (+ var12 1)) (O_Int var9)))) (is-O_Int (readHeap var14 (nthAddrRange var8 (+ var12 1))))) (is-O_Int (readHeap var14 (nthAddrRange var8 (+ var12 1)))))) (inv_main13 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main11 var15 var14 var13 var12 var11 var10 var9) (= var0 1)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var7 var12)) (= var4 var13)) (= var8 var14)) (= var6 (writeHeap var15 (nthAddrRange var9 var12) (O_Int var5)))) (is-O_Int (readHeap var15 (nthAddrRange var9 var12)))) (is-O_Int (readHeap var15 (nthAddrRange var9 var12)))) (not (<= 0 (+ (+ (* (- 1) (+ var7 1)) var8) (* (- 1) 1)))))) (inv_main13 var6 var8 var4 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (batchAllocPostHeap emptyHeap var12 (O_Int var11) var10) (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 1)) (<= 0 var10)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var13 var10)) true) (not (<= 0 (+ var13 (* (- 1) 1))))))) (inv_main13 var12 var13 var9 var0 var5 var3 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 1)) (<= 0 var10)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var13 var10)) true) (not (<= 0 (+ var13 (* (- 1) 1)))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var11) var10 var10))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var3) var5) (* (- 1) 1))))) (inv_main14 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main13 var7 var6 var5 var4 var3 var2 var1) (= var0 1)) (not (<= 0 (+ (+ (* (- 1) var4) var6) (* (- 1) 1))))) (<= 0 (+ (+ (* (- 1) 1) var6) (* (- 1) 1))))) (inv_main29 var7 var6 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (inv_main29 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var3 1))) (is-O_Int (readHeap var7 (nthAddrRange var1 var3)))) (is-O_Int (readHeap var7 (nthAddrRange var1 (+ var3 (* (- 1) 1)))))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var6) (* (- 1) 1))))) (inv_main29 var7 var6 var5 var4 var0 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main11 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main11 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main11 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main18 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var4))))) (<= 0 var4)))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main18 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var4)))) (<= 0 var4)))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var4))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main26 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var1 (+ var5 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main26 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 (+ var5 1))))) (is-O_Int (readHeap var7 (nthAddrRange var1 (+ var5 1))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main26 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var1 (+ var5 1)))))) (is-O_Int (readHeap var7 (nthAddrRange var1 (+ var5 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var4 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ var4 1))))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var4 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var4 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var4 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var2))))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var2)))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main29 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (getInt (readHeap var6 (nthAddrRange var0 var2))) (* (- 1) (getInt (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var2)))) (is-O_Int (readHeap var6 (nthAddrRange var0 (+ var2 (* (- 1) 1)))))))))
(check-sat)
