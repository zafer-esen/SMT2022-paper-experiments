(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main26 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main31 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main32 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main33 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main34 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main36 (Heap Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main39 (Heap Int Int Int AddrRange Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Heap)) (or (not (and (= var1 emptyHeap) (= var0 0))) (inv_main2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main31 var13 var12 var11 var10 var9 var8 var7) (= var6 var7)) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var5 var11)) (= var3 var12)) (= var4 (writeHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2))) (O_Int var8)))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (<= 0 (+ var6 (* (- 1) var5))))) (inv_main33 var4 var3 var5 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main32 var13 var12 var11 var10 var9 var8 var7) (= var6 var7)) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var5 var11)) (= var3 var12)) (= var4 (writeHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2))) (O_Int 0)))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (<= 0 (+ var6 (* (- 1) var5))))) (inv_main33 var4 var3 var5 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (and (and (and (and (and (and (inv_main26 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ var7 (* (- 1) var3)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var7))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var7) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var7))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var7))) 2) (* (- 1) 1)))) (<= 0 (+ var1 (* (- 1) var4))))) (inv_main31 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (and (and (and (and (and (and (inv_main26 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ var7 (* (- 1) var3)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var7))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var7) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var7))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var7))) 2) (* (- 1) 1)))) (not (<= 0 (+ var1 (* (- 1) var4)))))) (inv_main32 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (or (not (and (and (and (inv_main26 var7 var6 var5 var4 var3 var2 var1) (= var0 0)) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var8) var6) (* (- 1) 1)))) (<= 0 (+ var6 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var6 (* (- 2) var8))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 (* (- 2) var8))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var8))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var6) (* (- 1) 1)))))) (<= 0 (+ var8 (* (- 1) var4)))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main36 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var5 1))) (<= 0 (+ (+ (* (- 1) (+ var5 1)) var7) (* (- 1) 1))))) (inv_main36 var8 var7 var6 var0 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main33 var14 var13 var12 var11 var10 var9 var8) (= var0 (+ var4 1))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 (writeHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1))) (O_Int var8)))) (is-O_Int (readHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1)))))) (is-O_Int (readHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1))))))) (inv_main26 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main34 var14 var13 var12 var11 var10 var9 var8) (= var0 (+ var4 1))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 (writeHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1))) (O_Int 0)))) (is-O_Int (readHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1)))))) (is-O_Int (readHeap var14 (nthAddrRange var10 (+ (* 2 var11) (* (- 1) 1))))))) (inv_main26 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Heap) (var17 Int) (var18 Int) (var19 Heap) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int)) (or (not (and (batchAllocPostHeap emptyHeap var15 (O_Int var4) var3) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19 var18) (= var0 1)) (<= 0 (+ (+ (* (- 1) 1) var3) (* (- 1) 1)))) (= var7 (AddrRange (ite (<= 0 (+ var3 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var3))) (= var9 var1)) (= var11 var2)) (= var13 var3)) true) (= var24 0)) (= var13 (+ (* 2 var25) var24))) (or (not (<= 0 (+ (* (- 1) var24) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1))))) (or (not (<= 0 (+ var24 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var24) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var24) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var20 0) (= var13 (+ (* 2 var21) var20))) (or (not (<= 0 (+ (* (- 1) var20) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1))))) (or (not (<= 0 (+ var20 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var20) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var20) 2) (* (- 1) 1)))) (= var17 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var22) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1)))) (or (not (<= 0 (+ var22 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var22) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var22) 2) (* (- 1) 1)))) (= var13 (+ (* 2 var23) var22)))) (= var22 0))) (= var17 0)))) (= var5 1)) (= var6 3)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var16 var15)) (not (= var17 0))))) (inv_main26 var16 var14 var12 var0 var8 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Heap) (var17 Int) (var18 Int) (var19 Heap) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19 var18) (= var0 1)) (<= 0 (+ (+ (* (- 1) 1) var3) (* (- 1) 1)))) (= var7 (AddrRange (ite (<= 0 (+ var3 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var3))) (= var9 var1)) (= var11 var2)) (= var13 var3)) true) (= var24 0)) (= var13 (+ (* 2 var25) var24))) (or (not (<= 0 (+ (* (- 1) var24) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1))))) (or (not (<= 0 (+ var24 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var24) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var24) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var20 0) (= var13 (+ (* 2 var21) var20))) (or (not (<= 0 (+ (* (- 1) var20) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1))))) (or (not (<= 0 (+ var20 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var20) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var20) 2) (* (- 1) 1)))) (= var17 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var22) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var13) (* (- 1) 1)))) (or (not (<= 0 (+ var22 (* (- 1) 1)))) (<= 0 (+ var13 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var22) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var22) 2) (* (- 1) 1)))) (= var13 (+ (* 2 var23) var22)))) (= var22 0))) (= var17 0)))) (= var5 1)) (= var6 3)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var16 var15)) (not (= var17 0)))) (batchAllocHeap emptyHeap emptyHeap (O_Int var4) var3 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main36 var14 var13 var12 var11 var10 var9 var8) (or (and (= (getInt (readHeap var14 (nthAddrRange var10 var11))) 0) (= var0 1)) (and (not (= (getInt (readHeap var14 (nthAddrRange var10 var11))) 0)) (= var0 0)))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (is-O_Int (readHeap var14 (nthAddrRange var10 var11)))) (not (<= 0 (+ (getInt (readHeap var14 (nthAddrRange var10 var11))) (* (- 1) var12))))) (is-O_Int (readHeap var14 (nthAddrRange var10 var11))))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main36 var7 var6 var5 var4 var3 var2 var1) (= var0 1)) (<= 0 (+ (getInt (readHeap var7 (nthAddrRange var3 var4))) (* (- 1) var5)))) (is-O_Int (readHeap var7 (nthAddrRange var3 var4))))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main31 var13 var12 var11 var10 var9 var8 var7) (= var6 var7)) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var5 var11)) (= var3 var12)) (= var4 (writeHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2))) (O_Int var8)))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (not (<= 0 (+ var6 (* (- 1) var5)))))) (inv_main34 var4 var3 var5 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main32 var13 var12 var11 var10 var9 var8 var7) (= var6 var7)) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var5 var11)) (= var3 var12)) (= var4 (writeHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2))) (O_Int 0)))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (* 2 var10) (* (- 1) 2)))))) (not (<= 0 (+ var6 (* (- 1) var5)))))) (inv_main34 var4 var3 var5 var2 var1 var0 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main31 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main31 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main31 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2))))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main32 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main32 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main32 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2))))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1))))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1))))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (* 2 var3) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var3))))) (not (<= 0 (+ (getInt (readHeap var6 (nthAddrRange var2 var3))) (* (- 1) var4))))) (is-O_Int (readHeap var6 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var2 var3)))) (not (<= 0 (+ (getInt (readHeap var6 (nthAddrRange var2 var3))) (* (- 1) var4))))) (is-O_Int (readHeap var6 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 0)))))
(check-sat)
