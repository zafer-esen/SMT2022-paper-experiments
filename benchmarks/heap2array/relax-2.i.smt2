(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main13 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main14 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main19 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main30 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int) Bool)
(declare-fun inv_main33 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int Int) Bool)
(declare-fun inv_main37 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int Int Int) Bool)
(declare-fun inv_main49 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main52 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main54 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main60 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main62 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main68 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main73 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main76 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main80 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main81 (Heap Int Int AddrRange AddrRange Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 0)) (not (= var1 (getInt (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3)))))))) (is-O_Int (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3)))))) (not (= var3 0)))) (inv_main24 var12 var11 var10 var9 var8 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (inv_main30 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 0)) (= var1 1)) (<= 0 (+ (+ (* (- 1) var2) var4) (* (- 1) 1))))) (inv_main24 var10 var9 var8 var7 var6 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (inv_main30 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 1)) (or (not (<= 0 (+ (+ (* (- 1) var2) var4) (* (- 1) 1)))) (not (= var1 1))))) (inv_main24 var10 var9 var8 var7 var6 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (inv_main14 var5 var4 var3 var2 var1) (= var0 0)) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var4) (* (- 1) 1))))) (inv_main24 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var2 1))) (= var1 (getInt (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3))))))) (is-O_Int (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3)))))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) var4) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) var6) (* (- 1) 1))))) (inv_main33 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (inv_main37 var13 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2) (= var0 (+ var3 1))) (= var1 1)) (not (= var2 (getInt (readHeap var13 (nthAddrRange var6 (+ var3 (* (- 1) var4)))))))) (is-O_Int (readHeap var13 (nthAddrRange var6 (+ var3 (* (- 1) var4)))))) (= var4 0)) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var7) (* (- 1) 1))))) (inv_main33 var13 var12 var11 var10 var9 var8 var7 var6 var5 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (and (and (inv_main14 var6 var5 var4 var3 var2) (= var0 0)) (= var1 0)) (not (<= 0 (+ (+ (* (- 1) (+ var4 1)) var5) (* (- 1) 1))))) (<= 0 (+ var4 (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (inv_main33 var6 var5 var4 var3 var2 var3 var5 var2 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main19 var13 var12 var11 var10 var9 var8) (= var0 (+ var6 1))) (= var6 var8)) (= var1 var9)) (= var2 var10)) (= var7 var11)) (= var3 var12)) (= var5 (writeHeap var13 (nthAddrRange var9 var8) (O_UInt var4)))) (is-O_UInt (readHeap var13 (nthAddrRange var9 var8)))) (is-O_UInt (readHeap var13 (nthAddrRange var9 var8)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main19 var5 var3 var7 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main13 var13 var12 var11 var10 var9 var8) (= var0 0)) (= var5 var8)) (= var1 var9)) (= var2 var10)) (= var7 var11)) (= var6 var12)) (= var4 (writeHeap var13 (nthAddrRange var10 var8) (O_UInt var3)))) (is-O_UInt (readHeap var13 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var13 (nthAddrRange var10 var8)))) (not (<= 0 (+ (+ (* (- 1) (+ var5 1)) var6) (* (- 1) 1))))) (<= 0 (+ var7 (* (- 1) 1))))) (inv_main19 var4 var6 var7 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (batchAllocPostHeap var14 var10 (O_Int var3) var2) (batchAllocPostHeap var10 var11 (O_Int var9) var8)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var8 var1)) (= var7 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var8 (- 1))) (+ (HeapSize var10) 1) (HeapSize var10)) var8))) (= var6 var5)) (= var13 var8)) (= var12 var7)) true) (not (<= 0 (+ var12 (* (- 1) 1))))) (<= 0 (+ var13 (* (- 1) 1)))))) (inv_main19 var11 var12 var13 var6 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var8 var1)) (= var7 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var8 (- 1))) (+ (HeapSize var10) 1) (HeapSize var10)) var8))) (= var6 var5)) (= var13 var8)) (= var12 var7)) true) (not (<= 0 (+ var12 (* (- 1) 1))))) (<= 0 (+ var13 (* (- 1) 1))))) (batchAllocHeap var14 var14 (O_Int var3) var2 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var8 var1)) (= var7 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var8 (- 1))) (+ (HeapSize var10) 1) (HeapSize var10)) var8))) (= var6 var5)) (= var13 var8)) (= var12 var7)) true) (not (<= 0 (+ var12 (* (- 1) 1))))) (<= 0 (+ var13 (* (- 1) 1))))) (batchAllocHeap var10 var10 (O_Int var9) var8 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (inv_main33 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 (getInt (readHeap var11 (nthAddrRange var6 var1))))) (is-O_Int (readHeap var11 (nthAddrRange var6 var1))))) (inv_main37 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main68 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var1 1))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) 1)))))) (is-O_UInt (readHeap var7 (nthAddrRange var4 var1))))) (inv_main49 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 AddrRange) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main54 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 (+ var1 1))) (or (and (= var9 (getUInt (readHeap var16 (nthAddrRange var12 var10)))) (= var8 1)) (and (not (= var9 (getUInt (readHeap var16 (nthAddrRange var12 var10))))) (= var8 0)))) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_UInt (readHeap var16 (nthAddrRange var12 var10)))) (not (= var8 0)))) (inv_main49 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 AddrRange) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main62 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 (+ var1 1))) (or (and (not (= var9 (getUInt (readHeap var16 (nthAddrRange var12 var10))))) (= var8 1)) (and (= var9 (getUInt (readHeap var16 (nthAddrRange var12 var10)))) (= var8 0)))) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_UInt (readHeap var16 (nthAddrRange var12 var10)))) (not (= var8 0)))) (inv_main49 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main49 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var1 1))) (<= 0 (+ (+ (* (- 1) var1) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var1) var6) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1))))) (not (= var1 var2))) (not (<= 0 (+ (+ (* (- 1) var2) var1) (* (- 1) 1)))))) (inv_main49 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (inv_main21 var7 var6 var5 var4 var3) (= var0 0)) (= var1 (+ var6 (* (- 1) 1)))) (<= 0 var2)) (<= 0 (+ (+ (* (- 1) var5) var6) (* (- 1) 1))))) (inv_main49 var7 var6 var5 var4 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (inv_main21 var6 var5 var4 var3 var2) (= var0 0)) (<= 0 var1)) (not (<= 0 (+ (+ (* (- 1) var4) var5) (* (- 1) 1)))))) (inv_main49 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main73 var6 var5 var4 var3 var2 var1) (= var0 (+ var1 1))) (<= 0 (+ (+ (* (- 1) var4) var5) (* (- 1) 1))))) (inv_main81 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main73 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1)))))) (inv_main81 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (and (and (inv_main80 var9 var8 var7 var6 var5 var4 var3 var2) (= var0 (+ var3 1))) (= var1 (+ var4 1))) (not (= var2 (getUInt (readHeap var9 (nthAddrRange var5 (+ var3 (* (- 1) var4)))))))) (is-O_UInt (readHeap var9 (nthAddrRange var5 (+ var3 (* (- 1) var4)))))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var7) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var8) (* (- 1) 1))))) (inv_main76 var9 var8 var7 var6 var5 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (and (and (and (and (inv_main80 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var2 1))) (= var1 (getUInt (readHeap var8 (nthAddrRange var4 (+ var2 (* (- 1) var3))))))) (is-O_UInt (readHeap var8 (nthAddrRange var4 (+ var2 (* (- 1) var3)))))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) var6) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) var7) (* (- 1) 1))))) (inv_main76 var8 var7 var6 var5 var4 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main24 var7 var6 var5 var4 var3 var2) (= var0 0)) (= var1 0)) (= var2 0)) (<= 0 (+ (+ 1 var5) (* (- 1) var6)))) (<= 0 (+ var5 (* (- 1) 1)))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main76 var7 var6 var5 var4 var3 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main19 var12 var11 var10 var9 var8 var7) (= var5 var7)) (= var0 var8)) (= var1 var9)) (= var6 var10)) (= var2 var11)) (= var4 (writeHeap var12 (nthAddrRange var8 var7) (O_UInt var3)))) (is-O_UInt (readHeap var12 (nthAddrRange var8 var7)))) (is-O_UInt (readHeap var12 (nthAddrRange var8 var7)))) (not (<= 0 (+ (+ (* (- 1) (+ var5 1)) var6) (* (- 1) 1)))))) (inv_main14 var4 var2 var6 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main13 var12 var11 var10 var9 var8 var7) (= var4 var7)) (= var0 var8)) (= var1 var9)) (= var6 var10)) (= var5 var11)) (= var3 (writeHeap var12 (nthAddrRange var9 var7) (O_UInt var2)))) (is-O_UInt (readHeap var12 (nthAddrRange var9 var7)))) (is-O_UInt (readHeap var12 (nthAddrRange var9 var7)))) (not (<= 0 (+ (+ (* (- 1) (+ var4 1)) var5) (* (- 1) 1))))) (not (<= 0 (+ var6 (* (- 1) 1)))))) (inv_main14 var3 var5 var6 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (batchAllocPostHeap var13 var9 (O_Int var2) var1) (batchAllocPostHeap var9 var10 (O_Int var8) var7)) (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var12 var7)) (= var11 var6)) true) (not (<= 0 (+ var11 (* (- 1) 1))))) (not (<= 0 (+ var12 (* (- 1) 1))))))) (inv_main14 var10 var11 var12 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var12 var7)) (= var11 var6)) true) (not (<= 0 (+ var11 (* (- 1) 1))))) (not (<= 0 (+ var12 (* (- 1) 1)))))) (batchAllocHeap var13 var13 (O_Int var2) var1 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var12 var7)) (= var11 var6)) true) (not (<= 0 (+ var11 (* (- 1) 1))))) (not (<= 0 (+ var12 (* (- 1) 1)))))) (batchAllocHeap var9 var9 (O_Int var8) var7 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (inv_main49 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var0) var4) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var0) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (inv_main52 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main24 var5 var4 var3 var2 var1 var0) (not (= var0 0)))) (inv_main21 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main13 var13 var12 var11 var10 var9 var8) (= var0 (+ var6 1))) (= var6 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var7 var12)) (= var5 (writeHeap var13 (nthAddrRange var10 var8) (O_UInt var4)))) (is-O_UInt (readHeap var13 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var13 (nthAddrRange var10 var8)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main13 var5 var7 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (batchAllocPostHeap var14 var11 (O_Int var3) var2) (batchAllocPostHeap var11 var12 (O_Int var10) var9)) (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var9 var1)) (= var8 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var9 (- 1))) (+ (HeapSize var11) 1) (HeapSize var11)) var9))) (= var6 var5)) (= var7 var9)) (= var13 var8)) true) (<= 0 (+ var13 (* (- 1) 1)))))) (inv_main13 var12 var13 var7 var6 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var9 var1)) (= var8 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var9 (- 1))) (+ (HeapSize var11) 1) (HeapSize var11)) var9))) (= var6 var5)) (= var7 var9)) (= var13 var8)) true) (<= 0 (+ var13 (* (- 1) 1))))) (batchAllocHeap var14 var14 (O_Int var3) var2 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14) (= var0 0)) (<= 0 var2)) (<= 0 var1)) (= var5 (AddrRange (ite (<= 0 (+ var2 (- 1))) (+ (HeapSize var14) 1) (HeapSize var14)) var2))) (= var9 var1)) (= var8 var2)) true) (= var4 (AddrRange (ite (<= 0 (+ var9 (- 1))) (+ (HeapSize var11) 1) (HeapSize var11)) var9))) (= var6 var5)) (= var7 var9)) (= var13 var8)) true) (<= 0 (+ var13 (* (- 1) 1))))) (batchAllocHeap var11 var11 (O_Int var10) var9 var9))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (and (and (and (inv_main80 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 (+ var3 1))) (not (= var1 (getUInt (readHeap var8 (nthAddrRange var4 (+ var2 (* (- 1) var3)))))))) (is-O_UInt (readHeap var8 (nthAddrRange var4 (+ var2 (* (- 1) var3)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var2 1)) var7) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var2 1)) var6) (* (- 1) 1))))))) (inv_main73 var8 var7 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main80 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getUInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2))))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var6) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))))) (inv_main73 var7 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (and (inv_main24 var6 var5 var4 var3 var2 var1) (= var0 0)) (= var1 0)) (<= 0 (+ (+ 1 var4) (* (- 1) var5)))) (or (not (<= 0 (+ var5 (* (- 1) 1)))) (not (<= 0 (+ var4 (* (- 1) 1))))))) (inv_main73 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (and (and (inv_main49 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var0) var4) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var0) var5) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (not (= var0 var1))) (<= 0 (+ (+ (* (- 1) var1) var0) (* (- 1) 1))))) (inv_main68 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (inv_main37 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1))))))) (inv_main30 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 1)) (not (= var1 (getInt (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3)))))))) (is-O_Int (readHeap var12 (nthAddrRange var5 (+ var2 (* (- 1) var3)))))) (= var3 0)) (or (not (<= 0 (+ (+ (* (- 1) (+ var2 1)) var6) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var2 1)) var4) (* (- 1) 1))))))) (inv_main30 var12 var11 var10 var9 var8 var7 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (inv_main14 var5 var4 var3 var2 var1) (= var0 0)) (not (<= 0 (+ (+ (* (- 1) (+ var3 1)) var4) (* (- 1) 1))))) (or (not (<= 0 (+ var4 (* (- 1) 1)))) (not (<= 0 (+ var3 (* (- 1) 1))))))) (inv_main30 var5 var4 var3 var2 var1 var2 var4 var1 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main60 var7 var6 var5 var4 var3 var2 var1) (= var0 (getUInt (readHeap var7 (nthAddrRange var4 var1))))) (is-O_UInt (readHeap var7 (nthAddrRange var4 var1))))) (inv_main62 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main76 var7 var6 var5 var4 var3 var2 var1) (= var0 (getUInt (readHeap var7 (nthAddrRange var4 var1))))) (is-O_UInt (readHeap var7 (nthAddrRange var4 var1))))) (inv_main80 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (and (inv_main49 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var0) var4) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var0) var5) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (= var0 var1))) (inv_main60 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main52 var7 var6 var5 var4 var3 var2 var1) (= var0 (getUInt (readHeap var7 (nthAddrRange var4 var1))))) (is-O_UInt (readHeap var7 (nthAddrRange var4 var1))))) (inv_main54 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main13 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var5 (nthAddrRange var2 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main13 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var0)))) (is-O_UInt (readHeap var5 (nthAddrRange var2 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main13 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var5 (nthAddrRange var2 var0))))) (is-O_UInt (readHeap var5 (nthAddrRange var2 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var5 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var0)))) (is-O_UInt (readHeap var5 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var5 (nthAddrRange var1 var0))))) (is-O_UInt (readHeap var5 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main33 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var10 (nthAddrRange var5 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (not (and (and (inv_main33 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var5 (nthAddrRange var5 var0)))) (is-O_Int (readHeap var10 (nthAddrRange var5 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (not (and (inv_main37 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (not (and (and (inv_main37 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main21 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 1 var2) (* (- 1) var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main52 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main52 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main54 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main54 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var1)))) (is-O_UInt (readHeap var7 (nthAddrRange var3 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main62 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main62 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var1)))) (is-O_UInt (readHeap var7 (nthAddrRange var3 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1))))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (= (getUInt (readHeap var6 (nthAddrRange var3 var0))) (getUInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))))) (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main76 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main76 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main80 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main80 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main81 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))))))))
(check-sat)
